Index: src/test/java/testcases/CreateNote.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package testcases;\r\n\r\nimport com.fasterxml.jackson.core.JsonProcessingException;\r\nimport objectModels.RegisterRequestModel;\r\nimport org.testng.annotations.Listeners;\r\nimport org.testng.annotations.Test;\r\n\r\n@Listeners(utils.TestNGListners.class)\r\npublic class CreateNote {\r\n\r\n    @Test\r\n    public void createNewNode() throws JsonProcessingException {\r\n\r\n       String nodeID =  new RegisterRequestModel()\r\n                .prepareRegistrationRequestWithRandomValues()\r\n                .registerNewUser()\r\n                .getNewUserCredentials()\r\n                .prepareLoginRequest()\r\n                .loginWithExistingUser()\r\n                .getAuthTokenForNotes()\r\n                .prepareNewNoteRequestFromMockServer(1)\r\n                .createNewNote()\r\n                .getNoteID();\r\n\r\n       System.out.println(nodeID);\r\n    }\r\n\r\n    @Test\r\n    public void createNewNodeWithFacadeDesign() throws JsonProcessingException {\r\n\r\n        new RegisterRequestModel()\r\n                .register()\r\n                .login()\r\n                .createNote(1);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/testcases/CreateNote.java b/src/test/java/testcases/CreateNote.java
--- a/src/test/java/testcases/CreateNote.java	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
+++ b/src/test/java/testcases/CreateNote.java	(date 1729126207302)
@@ -12,11 +12,11 @@
     public void createNewNode() throws JsonProcessingException {
 
        String nodeID =  new RegisterRequestModel()
-                .prepareRegistrationRequestWithRandomValues()
-                .registerNewUser()
-                .getNewUserCredentials()
+                .prepareRegisterRequestWithRandomValues()
+                .sendRegisterRequest()
+                .getRegisteredUserCredentials()
                 .prepareLoginRequest()
-                .loginWithExistingUser()
+                .sendLoginRequest()
                 .getAuthTokenForNotes()
                 .prepareNewNoteRequestFromMockServer(1)
                 .createNewNote()
Index: src/main/java/objectModels/RegisterResponseModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package objectModels;\r\n\r\nimport io.qameta.allure.Step;\r\nimport org.testng.Assert;\r\nimport pojoClasses.RegisterRequestPojo;\r\nimport pojoClasses.RegisterResponsePojo;\r\n\r\npublic class RegisterResponseModel {\r\n\r\n    //ObjectsFromPojoClasses\r\n    RegisterRequestPojo requestObject;\r\n    RegisterResponsePojo responseObject;\r\n\r\n    //Variables\r\n    boolean expectedSuccess = true;\r\n    int expectedStatus = 201;\r\n    String expectedMassage = \"User account created successfully\";\r\n\r\n    //Constructor to pass the response from Request Model to Response Model\r\n    public RegisterResponseModel(RegisterRequestPojo requestObject , RegisterResponsePojo responseObject) {\r\n        this.requestObject = requestObject;\r\n        this.responseObject = responseObject;\r\n    }\r\n\r\n    //Validation Methods\r\n    @Step(\"validateMassageFromResponse\")\r\n    public RegisterResponseModel validateMassageFromResponse() {\r\n        Assert.assertEquals(responseObject.getMessage(),expectedMassage);\r\n        return this;\r\n    }\r\n\r\n    @Step(\"validateStatusFromResponse\")\r\n    public RegisterResponseModel validateStatusFromResponse() {\r\n        Assert.assertEquals(responseObject.getStatus(),expectedStatus);\r\n        return this;\r\n    }\r\n\r\n    @Step(\"validateSuccessFromResponse\")\r\n    public RegisterResponseModel validateSuccessFromResponse() {\r\n        Assert.assertEquals(responseObject.isSuccess(),expectedSuccess);\r\n        return this;\r\n    }\r\n\r\n    @Step(\"validateNameFromResponse\")\r\n    public RegisterResponseModel validateNameFromResponse() {\r\n        Assert.assertEquals(responseObject.getData().getName(),requestObject.getName());\r\n        return this;\r\n    }\r\n\r\n    @Step(\"validateEmailFromResponse\")\r\n    public RegisterResponseModel validateEmailFromResponse() {\r\n        Assert.assertEquals(responseObject.getData().getEmail(),requestObject.getEmail());\r\n        return this;\r\n    }\r\n\r\n    //Getter Methods\r\n    @Step(\"getUserID\")\r\n    public String getUserID()\r\n    {\r\n        return responseObject.getData().getId();\r\n    }\r\n\r\n    @Step(\"getNewUserCredentials\")\r\n    //Get Needed Data from Registration Model and pass it to Login Model\r\n    public LoginRequestModel getNewUserCredentials() {\r\n\r\n        return new LoginRequestModel(\r\n                requestObject.getEmail(),\r\n                requestObject.getPassword(),\r\n                responseObject.getData().getId());\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/objectModels/RegisterResponseModel.java b/src/main/java/objectModels/RegisterResponseModel.java
--- a/src/main/java/objectModels/RegisterResponseModel.java	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
+++ b/src/main/java/objectModels/RegisterResponseModel.java	(date 1729126207314)
@@ -54,19 +54,18 @@
     }
 
     //Getter Methods
-    @Step("getUserID")
-    public String getUserID()
-    {
-        return responseObject.getData().getId();
+    public RegisterRequestPojo getRequestPojoObject() {
+        return requestObject;
+    }
+
+    public RegisterResponsePojo getResponsePojoObject() {
+        return responseObject;
     }
 
-    @Step("getNewUserCredentials")
     //Get Needed Data from Registration Model and pass it to Login Model
-    public LoginRequestModel getNewUserCredentials() {
+    @Step("Get Registered User Credentials")
+    public LoginRequestModel getRegisteredUserCredentials() {
 
-        return new LoginRequestModel(
-                requestObject.getEmail(),
-                requestObject.getPassword(),
-                responseObject.getData().getId());
+        return new LoginRequestModel(requestObject, responseObject);
     }
 }
Index: src/main/java/objectModels/LoginRequestModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package objectModels;\r\n\r\nimport com.fasterxml.jackson.core.JsonProcessingException;\r\nimport com.fasterxml.jackson.databind.json.JsonMapper;\r\nimport io.qameta.allure.Step;\r\nimport io.restassured.response.Response;\r\nimport pojoClasses.LoginRequestPojo;\r\nimport pojoClasses.LoginResponsePojo;\r\n\r\nimport static utils.ApiManager.MakeRequest;\r\nimport static utils.ApiManager.getResponseBody;\r\nimport static utils.PropertiesManager.getPropertiesValue;\r\n\r\npublic class LoginRequestModel {\r\n\r\n    //Variables\r\n    String loginEndpoint = getPropertiesValue(\"baseUrlApi\")+\"users/login\";\r\n    String responseBodyAsString;\r\n    Response response;\r\n    JsonMapper mapper;\r\n\r\n    String userEmail;\r\n    String userPassword;\r\n    String userID;\r\n\r\n    //ObjectsFromPojoClasses\r\n    LoginRequestPojo requestObject;\r\n    LoginResponsePojo responseObject;\r\n\r\n    //Constructor to pass Registration Data into Login Model\r\n    public LoginRequestModel(String email, String password, String id) {\r\n        this.userEmail = email;\r\n        this.userPassword = password;\r\n        this.userID = id;\r\n    }\r\n\r\n    @Step(\"prepareLoginRequest\")\r\n    //Method to get Request Body of Login from Registration Results\r\n    public LoginRequestModel prepareLoginRequest()\r\n    {\r\n        requestObject = LoginRequestPojo.builder()\r\n                .email(userEmail)\r\n                .password(userPassword)\r\n                .build();\r\n        return this;\r\n    }\r\n\r\n    @Step(\"loginWithExistingUser\")\r\n    //Method to Execute Login Request\r\n    public LoginResponseModel loginWithExistingUser() throws JsonProcessingException {\r\n\r\n        response =\r\n                MakeRequest(\"Post\", loginEndpoint,requestObject, \"application/json\");\r\n\r\n        responseBodyAsString = getResponseBody(response);\r\n        mapper = new JsonMapper();\r\n\r\n        responseObject = mapper.readValue(responseBodyAsString, LoginResponsePojo.class);\r\n        return new LoginResponseModel(requestObject,responseObject,userID);\r\n    }\r\n\r\n    //Facade Method\r\n    @Step(\"login\")\r\n    public CreateNoteRequestModel login() throws JsonProcessingException {\r\n        return prepareLoginRequest().loginWithExistingUser().getAuthTokenForNotes();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/objectModels/LoginRequestModel.java b/src/main/java/objectModels/LoginRequestModel.java
--- a/src/main/java/objectModels/LoginRequestModel.java	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
+++ b/src/main/java/objectModels/LoginRequestModel.java	(date 1729126207321)
@@ -6,6 +6,8 @@
 import io.restassured.response.Response;
 import pojoClasses.LoginRequestPojo;
 import pojoClasses.LoginResponsePojo;
+import pojoClasses.RegisterRequestPojo;
+import pojoClasses.RegisterResponsePojo;
 
 import static utils.ApiManager.MakeRequest;
 import static utils.ApiManager.getResponseBody;
@@ -19,49 +21,49 @@
     Response response;
     JsonMapper mapper;
 
-    String userEmail;
-    String userPassword;
-    String userID;
+    //Objects From Pojo Classes of Register
+    RegisterRequestPojo requestObjectRegister;
+    RegisterResponsePojo responseObjectRegister;
 
-    //ObjectsFromPojoClasses
-    LoginRequestPojo requestObject;
-    LoginResponsePojo responseObject;
+    //Objects From Pojo Classes of Login
+    LoginRequestPojo requestObjectLogin;
+    LoginResponsePojo responseObjectLogin;
 
     //Constructor to pass Registration Data into Login Model
-    public LoginRequestModel(String email, String password, String id) {
-        this.userEmail = email;
-        this.userPassword = password;
-        this.userID = id;
+    public LoginRequestModel(RegisterRequestPojo requestObjectRegister, RegisterResponsePojo responseObjectRegister) {
+        this.requestObjectRegister = requestObjectRegister;
+        this.responseObjectRegister = responseObjectRegister;
+
     }
 
     @Step("prepareLoginRequest")
     //Method to get Request Body of Login from Registration Results
     public LoginRequestModel prepareLoginRequest()
     {
-        requestObject = LoginRequestPojo.builder()
-                .email(userEmail)
-                .password(userPassword)
+        requestObjectLogin = LoginRequestPojo.builder()
+                .email(requestObjectRegister.getEmail())
+                .password(requestObjectRegister.getPassword())
                 .build();
         return this;
     }
 
     @Step("loginWithExistingUser")
     //Method to Execute Login Request
-    public LoginResponseModel loginWithExistingUser() throws JsonProcessingException {
+    public LoginResponseModel sendLoginRequest() throws JsonProcessingException {
 
         response =
-                MakeRequest("Post", loginEndpoint,requestObject, "application/json");
+                MakeRequest("Post", loginEndpoint, requestObjectLogin, "application/json");
 
         responseBodyAsString = getResponseBody(response);
         mapper = new JsonMapper();
 
-        responseObject = mapper.readValue(responseBodyAsString, LoginResponsePojo.class);
-        return new LoginResponseModel(requestObject,responseObject,userID);
+        responseObjectLogin = mapper.readValue(responseBodyAsString, LoginResponsePojo.class);
+        return new LoginResponseModel(requestObjectLogin, responseObjectLogin,userID);
     }
 
     //Facade Method
     @Step("login")
     public CreateNoteRequestModel login() throws JsonProcessingException {
-        return prepareLoginRequest().loginWithExistingUser().getAuthTokenForNotes();
+        return prepareLoginRequest().sendLoginRequest().getAuthTokenForNotes();
     }
 }
Index: src/test/java/testcases/UpdateNoteStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package testcases;\r\n\r\nimport com.fasterxml.jackson.core.JsonProcessingException;\r\nimport objectModels.RegisterRequestModel;\r\nimport org.testng.annotations.Listeners;\r\nimport org.testng.annotations.Test;\r\n\r\n@Listeners(utils.TestNGListners.class)\r\npublic class UpdateNoteStatus {\r\n\r\n    @Test\r\n    public void updateNoteStatus() throws JsonProcessingException {\r\n        new RegisterRequestModel()\r\n                .prepareRegistrationRequestWithRandomValues()\r\n                .registerNewUser()\r\n                .getNewUserCredentials()\r\n                .prepareLoginRequest()\r\n                .loginWithExistingUser()\r\n                .getAuthTokenForNotes()\r\n                .prepareNewNoteRequestFromMockServer(1)\r\n                .createNewNote()\r\n                .getNoteIdForUpdate()\r\n                .prepareUpdateNoteRequest()\r\n                .updateNoteStatus()\r\n                .getNoteIdForRetrieve()\r\n                .retrieveNoteDetails()\r\n                .isNoteStatusCompleted();\r\n    }\r\n\r\n    @Test\r\n    public void updateNoteStatusWithFacadeDesign() throws JsonProcessingException {\r\n        new RegisterRequestModel()\r\n                .register()\r\n                .login()\r\n                .createNote(1)\r\n                .updateNote()\r\n                .retrieveNote();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/testcases/UpdateNoteStatus.java b/src/test/java/testcases/UpdateNoteStatus.java
--- a/src/test/java/testcases/UpdateNoteStatus.java	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
+++ b/src/test/java/testcases/UpdateNoteStatus.java	(date 1729126207306)
@@ -11,11 +11,11 @@
     @Test
     public void updateNoteStatus() throws JsonProcessingException {
         new RegisterRequestModel()
-                .prepareRegistrationRequestWithRandomValues()
-                .registerNewUser()
-                .getNewUserCredentials()
+                .prepareRegisterRequestWithRandomValues()
+                .sendRegisterRequest()
+                .getRegisteredUserCredentials()
                 .prepareLoginRequest()
-                .loginWithExistingUser()
+                .sendLoginRequest()
                 .getAuthTokenForNotes()
                 .prepareNewNoteRequestFromMockServer(1)
                 .createNewNote()
Index: src/main/java/objectModels/RegisterRequestModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package objectModels;\r\nimport static utils.ApiManager.*;\r\nimport static utils.RandomDataGenerator.*;\r\n\r\nimport static utils.PropertiesManager.*;\r\nimport com.fasterxml.jackson.core.JsonProcessingException;\r\nimport com.fasterxml.jackson.databind.json.JsonMapper;\r\nimport io.qameta.allure.Step;\r\nimport io.restassured.response.Response;\r\nimport pojoClasses.RegisterRequestPojo;\r\nimport pojoClasses.RegisterResponsePojo;\r\n\r\n\r\npublic class RegisterRequestModel {\r\n\r\n    //Variables\r\n    String mockServerUrl = getPropertiesValue(\"baseUrlMockServer\")+\"Users/\";\r\n    String registerEndpoint = getPropertiesValue(\"baseUrlApi\")+\"users/register\";\r\n    String responseBodyAsString;\r\n    Response response;\r\n    JsonMapper mapper;\r\n\r\n    //ObjectsFromPojoClasses\r\n    RegisterRequestPojo requestObject;\r\n    RegisterResponsePojo responseObject;\r\n\r\n    @Step(\"prepareRegistrationRequestFromMockServer\")\r\n    //Method to get Request Body inputs from Mock Server Statically\r\n    public RegisterRequestModel prepareRegistrationRequestFromMockServer(int userID) throws JsonProcessingException {\r\n        response =\r\n                GetRequest(mockServerUrl +userID,null);\r\n        responseBodyAsString = getResponseBody(response);\r\n\r\n        mapper = new JsonMapper();\r\n        requestObject = mapper.readValue(responseBodyAsString, RegisterRequestPojo.class);\r\n        return this;\r\n    }\r\n\r\n    @Step(\"prepareRegistrationRequestWithRandomValues\")\r\n    //Method to set Request Body inputs from TimeStamp Dynamically\r\n    public RegisterRequestModel prepareRegistrationRequestWithRandomValues(){\r\n        requestObject = RegisterRequestPojo.builder()\r\n                .name(generateName())\r\n                .email(generateEmail())\r\n                .password(generateStrongPassword())\r\n                .build();\r\n        return this;\r\n    }\r\n\r\n    @Step(\"registerNewUser\")\r\n    //Method to Execute Registration Request\r\n    public RegisterResponseModel registerNewUser() throws JsonProcessingException {\r\n        response =\r\n                MakeRequest(\"Post\", registerEndpoint,requestObject, \"application/json\");\r\n\r\n        responseBodyAsString = getResponseBody(response);\r\n        mapper = new JsonMapper();\r\n\r\n        responseObject = mapper.readValue(responseBodyAsString, RegisterResponsePojo.class);\r\n        return new RegisterResponseModel(requestObject,responseObject);\r\n    }\r\n\r\n    //Facade Method\r\n    @Step(\"register\")\r\n    public LoginRequestModel register() throws JsonProcessingException {\r\n        prepareRegistrationRequestWithRandomValues().registerNewUser().getNewUserCredentials();\r\n        return new LoginRequestModel(\r\n                requestObject.getEmail(),\r\n                requestObject.getPassword(),\r\n                responseObject.getData().getId());\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/objectModels/RegisterRequestModel.java b/src/main/java/objectModels/RegisterRequestModel.java
--- a/src/main/java/objectModels/RegisterRequestModel.java	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
+++ b/src/main/java/objectModels/RegisterRequestModel.java	(date 1729126207294)
@@ -24,9 +24,9 @@
     RegisterRequestPojo requestObject;
     RegisterResponsePojo responseObject;
 
-    @Step("prepareRegistrationRequestFromMockServer")
+    @Step("Prepare Registration Request From MockServer")
     //Method to get Request Body inputs from Mock Server Statically
-    public RegisterRequestModel prepareRegistrationRequestFromMockServer(int userID) throws JsonProcessingException {
+    public RegisterRequestModel prepareRegisterRequestFromMockServer(int userID) throws JsonProcessingException {
         response =
                 GetRequest(mockServerUrl +userID,null);
         responseBodyAsString = getResponseBody(response);
@@ -36,20 +36,20 @@
         return this;
     }
 
-    @Step("prepareRegistrationRequestWithRandomValues")
+    @Step("Prepare Registration Request With Random Values")
     //Method to set Request Body inputs from TimeStamp Dynamically
-    public RegisterRequestModel prepareRegistrationRequestWithRandomValues(){
+    public RegisterRequestModel prepareRegisterRequestWithRandomValues(){
         requestObject = RegisterRequestPojo.builder()
                 .name(generateName())
-                .email(generateEmail())
+                .email(generateUniqueEmail())
                 .password(generateStrongPassword())
                 .build();
         return this;
     }
 
-    @Step("registerNewUser")
+    @Step("Send Register Request")
     //Method to Execute Registration Request
-    public RegisterResponseModel registerNewUser() throws JsonProcessingException {
+    public RegisterResponseModel sendRegisterRequest() throws JsonProcessingException {
         response =
                 MakeRequest("Post", registerEndpoint,requestObject, "application/json");
 
@@ -61,13 +61,10 @@
     }
 
     //Facade Method
-    @Step("register")
+    @Step("Register")
     public LoginRequestModel register() throws JsonProcessingException {
-        prepareRegistrationRequestWithRandomValues().registerNewUser().getNewUserCredentials();
-        return new LoginRequestModel(
-                requestObject.getEmail(),
-                requestObject.getPassword(),
-                responseObject.getData().getId());
+        prepareRegisterRequestWithRandomValues().sendRegisterRequest().getRegisteredUserCredentials();
+        return new LoginRequestModel(requestObject, responseObject);
     }
 
 }
Index: src/main/java/utils/ActionBot.java
===================================================================
diff --git a/src/main/java/utils/ActionBot.java b/src/main/java/utils/ActionBot.java
deleted file mode 100644
--- a/src/main/java/utils/ActionBot.java	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
+++ /dev/null	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
@@ -1,100 +0,0 @@
-package utils;
-
-import org.openqa.selenium.By;
-import org.openqa.selenium.WebDriver;
-import org.openqa.selenium.interactions.Actions;
-
-import java.io.IOException;
-import java.time.Duration;
-
-import static utils.Screenshot.takeElementScreenshot;
-import static utils.RandomDataGenerator.generateInteger;
-
-public class ActionBot {
-
-    static String textBoxesPath = "src/test/resources/Screenshots/TextBoxes/";
-    static String pressedButtonsPath ="src/test/resources/Screenshots/PressedButtons/";
-    static String retrievedTextPath ="src/test/resources/Screenshots/RetrievedTexts/";
-
-    //ActionBot1 for Typing on TextBox
-    public static void type (WebDriver driver , By locator , String text) throws IOException {
-        Waits.getFluentWait(driver).until(f -> {
-            driver.findElement(locator).clear();
-            driver.findElement(locator).sendKeys(text);
-            return true;
-        });
-
-        System.out.println("Typing " + text);
-
-        takeElementScreenshot(driver,locator,textBoxesPath,generateInteger());
-    }
-
-    //ActionBot2 for Pressing on Button or Link
-    public static void press(WebDriver driver,By locator) throws IOException {
-
-        Waits.getFluentWait(driver).until(f -> {
-            System.out.println("Clicking On " + driver.findElement(locator).getText());
-            try {
-                takeElementScreenshot(driver,locator,pressedButtonsPath,generateInteger());
-            } catch (IOException e) {
-                throw new RuntimeException(e);
-            }
-            driver.findElement(locator).click();
-            return true;
-         });
-
-    }
-
-    //ActionBot3 for Get Text from Element
-    public static String readText(WebDriver driver,By locator) throws IOException {
-        Waits.getFluentWait(driver).until(f -> {
-          driver.findElement(locator).getText();
-            return true;
-        });
-
-        takeElementScreenshot(driver,locator,retrievedTextPath,generateInteger());
-
-        return driver.findElement(locator).getText().replace("\n","");
-
-    }
-
-    //ActionBot4 for Verify Element is Displayed
-    public static boolean isElementDisplayed(WebDriver driver,By locator){
-        Waits.getFluentWait(driver).until(f -> {
-            driver.findElement(locator).isDisplayed();
-            return true;
-        });
-        return true;
-    }
-
-    //ActionBot5 for Verify Element is Enabled
-    public static boolean isElementEnabled(WebDriver driver,By locator){
-        Waits.getFluentWait(driver).until(f -> {
-            driver.findElement(locator).isEnabled();
-            return true;
-        });
-        return true;
-    }
-
-    //ActionBot6 for Verify Element is Selected
-    public static boolean isElementSelected(WebDriver driver,By locator){
-        Waits.getFluentWait(driver).until(f -> {
-            driver.findElement(locator).isSelected();
-            return true;
-        });
-        return true;
-    }
-
-    //ActionBot7 for Hover on Main-menu & Sub-menu
-    public static void hoverToSubMenu(WebDriver driver,By mainMenuLocator , By subMenuLocator) {
-        Waits.getFluentWait(driver).until(f -> {
-            new Actions(driver)
-                    .moveToElement(driver.findElement(mainMenuLocator))
-                    .pause(Duration.ofMillis(100))
-                    .moveToElement(driver.findElement(subMenuLocator))
-                    .click()
-                    .perform();
-            return true;
-        });
-    }
-}
Index: src/main/java/utils/AlertsActions.java
===================================================================
diff --git a/src/main/java/utils/AlertsActions.java b/src/main/java/utils/AlertsActions.java
deleted file mode 100644
--- a/src/main/java/utils/AlertsActions.java	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
+++ /dev/null	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
@@ -1,31 +0,0 @@
-package utils;
-
-import org.openqa.selenium.WebDriver;
-import org.openqa.selenium.support.ui.ExpectedConditions;
-
-public class AlertsActions {
-
-    public static void acceptAlert(WebDriver driver)
-    {
-        Waits.getFluentWait(driver).until(ExpectedConditions.alertIsPresent());
-        driver.switchTo().alert().accept();
-    }
-
-    public static void dismissAlert(WebDriver driver)
-    {
-        Waits.getFluentWait(driver).until(ExpectedConditions.alertIsPresent());
-        driver.switchTo().alert().dismiss();
-    }
-
-    public static void typeTextInAlert(WebDriver driver,String text)
-    {
-        Waits.getFluentWait(driver).until(ExpectedConditions.alertIsPresent());
-        driver.switchTo().alert().sendKeys(text);
-    }
-
-    public static String getTextInAlert(WebDriver driver)
-    {
-        Waits.getFluentWait(driver).until(ExpectedConditions.alertIsPresent());
-        return driver.switchTo().alert().getText();
-    }
-}
Index: src/main/java/utils/ScrollActions.java
===================================================================
diff --git a/src/main/java/utils/ScrollActions.java b/src/main/java/utils/ScrollActions.java
deleted file mode 100644
--- a/src/main/java/utils/ScrollActions.java	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
+++ /dev/null	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
@@ -1,30 +0,0 @@
-package utils;
-
-import org.openqa.selenium.By;
-import org.openqa.selenium.WebDriver;
-import org.openqa.selenium.WebElement;
-import org.openqa.selenium.interactions.Actions;
-import org.openqa.selenium.interactions.WheelInput;
-
-public class ScrollActions {
-
-    public static void scrollDownToElement (WebDriver driver, By elementLocator) {
-        WebElement table = driver.findElement(elementLocator);
-        new Actions(driver).scrollToElement(table).perform();
-    }
-
-    public static void scrollByGivenAmountFromElement(WebDriver driver,By elementLocator , int deltaX, int deltaY)
-    {
-        WheelInput.ScrollOrigin myOrigin =
-                WheelInput.ScrollOrigin.fromElement(driver.findElement(elementLocator));
-        new Actions(driver).scrollFromOrigin(myOrigin,deltaX,deltaY).perform();
-    }
-
-    public static void scrollDownTillElementDisplayed (WebDriver driver,By targetElement , int scrollStep) {
-       Waits.getFluentWait(driver).until(f->{
-           new Actions(driver).scrollByAmount(0,scrollStep).perform();
-           driver.findElement(targetElement).isDisplayed();
-           return true;
-       });
-    }
-}
Index: src/main/java/utils/DropdownActions.java
===================================================================
diff --git a/src/main/java/utils/DropdownActions.java b/src/main/java/utils/DropdownActions.java
deleted file mode 100644
--- a/src/main/java/utils/DropdownActions.java	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
+++ /dev/null	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
@@ -1,50 +0,0 @@
-package utils;
-
-import org.openqa.selenium.By;
-import org.openqa.selenium.WebDriver;
-import org.openqa.selenium.WebElement;
-import org.openqa.selenium.support.ui.ExpectedConditions;
-import org.openqa.selenium.support.ui.Select;
-
-import java.util.List;
-import java.util.stream.Collectors;
-
-public class DropdownActions {
-
-    public static void selectFromDropdownByValue(WebDriver driver, By dropdown , String value)
-    {
-        dropDownElement(driver,dropdown).selectByValue(value);
-    }
-
-    public static void selectFromDropdownByIndex(WebDriver driver, By dropdown , int index)
-    {
-        dropDownElement(driver,dropdown).selectByIndex(index);
-    }
-
-    public static void selectFromDropdownByText(WebDriver driver, By dropdown , String text)
-    {
-        dropDownElement(driver,dropdown).selectByVisibleText(text);
-    }
-
-    public static List<String> getAllOptionsAsString(WebDriver driver, By dropdown)
-    {
-        List<WebElement> options = dropDownElement(driver,dropdown).getOptions();
-        return options.stream().map(e->e.getText()).collect(Collectors.toList());
-    }
-
-    public static String getSelectedOption(WebDriver driver, By dropdown)
-    {
-        return dropDownElement(driver,dropdown).getFirstSelectedOption().getText();
-    }
-
-    public static void deselectAllOptions(WebDriver driver, By dropdown)
-    {
-        dropDownElement(driver,dropdown).deselectAll();
-    }
-
-    private static Select dropDownElement(WebDriver driver , By dropdownLocator)
-    {
-        Waits.getFluentWait(driver).until(ExpectedConditions.elementToBeClickable(dropdownLocator));
-        return new Select(driver.findElement(dropdownLocator));
-    }
-}
Index: src/main/java/utils/TestNGListners.java
===================================================================
diff --git a/src/main/java/utils/TestNGListners.java b/src/main/java/utils/TestNGListners.java
deleted file mode 100644
--- a/src/main/java/utils/TestNGListners.java	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
+++ /dev/null	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
@@ -1,44 +0,0 @@
-package utils;
-
-import org.testng.*;
-
-import java.io.IOException;
-
-public class TestNGListners implements ITestListener , IInvokedMethodListener , ISuiteListener {
-    String propertiesFilePath = "src/main/resources/Configurations.properties";
-
-    public void onTestStart(ITestResult result) {
-        // not implemented
-    }
-
-    public void onTestSuccess(ITestResult result) {
-    }
-
-    public void onTestFailure(ITestResult result) {
-    }
-
-    public void onTestSkipped(ITestResult result) {
-        // not implemented
-    }
-
-    public void onStart(ITestContext context) {
-        PropertiesManager.filePath = propertiesFilePath;
-        try {
-            PropertiesManager.loadPropertiesIntoSystem();
-        } catch (IOException e) {
-            throw new RuntimeException(e);
-        }
-    }
-
-    public void onFinish(ITestContext context) {
-        // not implemented
-    }
-
-    public void beforeInvocation(IInvokedMethod method, ITestResult testResult) {
-        // not implemented
-    }
-
-    public void afterInvocation(IInvokedMethod method, ITestResult testResult) {
-    }
-}
-
Index: src/main/java/utils/Screenshot.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package utils;\r\n\r\nimport io.cucumber.java.Scenario;\r\nimport io.qameta.allure.Allure;\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.OutputType;\r\nimport org.openqa.selenium.TakesScreenshot;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.io.FileHandler;\r\nimport org.testng.ITestResult;\r\n\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\n\r\npublic class Screenshot {\r\n\r\n    static int SuccessCodeForTestNG =1;\r\n    static int FailureCodeForTestNG =2;\r\n\r\n    public static void captureSuccess(WebDriver driver, ITestResult result) throws IOException {\r\n        if (result.getStatus()==SuccessCodeForTestNG) {\r\n\r\n            File source = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);\r\n            File destination = new File(\"src/test/resources/Screenshots/SuccessfulTests/\"+ result.getName() +\".png\");\r\n            FileHandler.copy(source, destination);\r\n\r\n            var screenshot = ((TakesScreenshot) driver).getScreenshotAs(OutputType.BYTES);\r\n            Allure.addAttachment(result.getName(),new ByteArrayInputStream(screenshot));\r\n        }\r\n    }\r\n\r\n    public static void captureFailure(WebDriver driver, ITestResult result) throws IOException {\r\n        if (result.getStatus() == FailureCodeForTestNG) {\r\n\r\n            File source = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);\r\n            File destination = new File(\"src/test/resources/Screenshots/FailedTests/\"+ result.getName() +\".png\");\r\n            FileHandler.copy(source, destination);\r\n\r\n            var screenshot = ((TakesScreenshot) driver).getScreenshotAs(OutputType.BYTES);\r\n            Allure.addAttachment(result.getName(),new ByteArrayInputStream(screenshot));\r\n        }\r\n    }\r\n\r\n    public static void captureSuccess(WebDriver driver, Scenario cucumberResult) throws IOException {\r\n        //Increment ScreenshotFileNumber\r\n        if (!cucumberResult.isFailed()) {\r\n\r\n            File source = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);\r\n            File destination = new File(\"src/test/resources/Screenshots/SuccessfulTests/\"+cucumberResult.getName()+\".png\");\r\n            FileHandler.copy(source, destination);\r\n\r\n            var screenshot = ((TakesScreenshot) driver).getScreenshotAs(OutputType.BYTES);\r\n            Allure.addAttachment(cucumberResult.getName(),new ByteArrayInputStream(screenshot));\r\n        }\r\n    }\r\n\r\n    public static void captureFailure(WebDriver driver, Scenario cucumberResult) throws IOException {\r\n        if (cucumberResult.isFailed()) {\r\n\r\n            File source = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);\r\n            File destination = new File(\"src/test/resources/Screenshots/FailedTests/\"+cucumberResult.getName()+\".png\");\r\n            FileHandler.copy(source, destination);\r\n\r\n            var screenshot = ((TakesScreenshot) driver).getScreenshotAs(OutputType.BYTES);\r\n            Allure.addAttachment(cucumberResult.getName(),new ByteArrayInputStream(screenshot));\r\n        }\r\n    }\r\n\r\n    public static void takeElementScreenshot(WebDriver driver, By locator , String targetPath ,\r\n                                             String fileName) throws IOException {\r\n        File source = driver.findElement(locator).getScreenshotAs(OutputType.FILE);\r\n        File destination =\r\n                new File (targetPath+fileName+\".png\");\r\n\r\n        FileHandler.copy(source,destination);\r\n\r\n        }\r\n    }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/utils/Screenshot.java b/src/main/java/utils/Screenshot.java
--- a/src/main/java/utils/Screenshot.java	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
+++ b/src/main/java/utils/Screenshot.java	(date 1728783981725)
@@ -2,12 +2,10 @@
 
 import io.cucumber.java.Scenario;
 import io.qameta.allure.Allure;
-import org.openqa.selenium.By;
-import org.openqa.selenium.OutputType;
-import org.openqa.selenium.TakesScreenshot;
-import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.*;
 import org.openqa.selenium.io.FileHandler;
 import org.testng.ITestResult;
+import org.testng.asserts.IAssert;
 
 import java.io.ByteArrayInputStream;
 import java.io.File;
@@ -18,9 +16,10 @@
     static int SuccessCodeForTestNG =1;
     static int FailureCodeForTestNG =2;
 
-    public static void captureSuccess(WebDriver driver, ITestResult result) throws IOException {
+    public static void captureSuccess(WebDriver driver, ITestResult result) throws IOException, InterruptedException {
         if (result.getStatus()==SuccessCodeForTestNG) {
 
+            Thread.sleep(1000);
             File source = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
             File destination = new File("src/test/resources/Screenshots/SuccessfulTests/"+ result.getName() +".png");
             FileHandler.copy(source, destination);
@@ -30,9 +29,10 @@
         }
     }
 
-    public static void captureFailure(WebDriver driver, ITestResult result) throws IOException {
+    public static void captureFailure(WebDriver driver, ITestResult result) throws IOException, InterruptedException {
         if (result.getStatus() == FailureCodeForTestNG) {
 
+            Thread.sleep(1000);
             File source = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
             File destination = new File("src/test/resources/Screenshots/FailedTests/"+ result.getName() +".png");
             FileHandler.copy(source, destination);
@@ -67,6 +67,16 @@
         }
     }
 
+    public static void captureSoftFailure(WebDriver driver, IAssert<?> assertCommand) throws IOException, InterruptedException {
+
+        File source = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
+        File destination = new File("src/test/resources/Screenshots/SoftAssertionFailures/"+ assertCommand.getExpected() +".png");
+        FileHandler.copy(source, destination);
+
+        var screenshot = ((TakesScreenshot) driver).getScreenshotAs(OutputType.BYTES);
+        Allure.addAttachment(String.valueOf(assertCommand.getExpected()),new ByteArrayInputStream(screenshot));
+    }
+
     public static void takeElementScreenshot(WebDriver driver, By locator , String targetPath ,
                                              String fileName) throws IOException {
         File source = driver.findElement(locator).getScreenshotAs(OutputType.FILE);
@@ -74,7 +84,15 @@
                 new File (targetPath+fileName+".png");
 
         FileHandler.copy(source,destination);
-
-        }
+    }
+
+    public static void takeElementScreenshot(WebDriver driver, WebElement element , String targetPath ,
+                                             String fileName) throws IOException {
+        File source = element.getScreenshotAs(OutputType.FILE);
+        File destination =
+                new File (targetPath+fileName+".png");
+
+        FileHandler.copy(source,destination);
     }
+    }
 
Index: src/main/java/utils/BrowserFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package utils;\r\n\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.chrome.ChromeDriver;\r\nimport org.openqa.selenium.chrome.ChromeOptions;\r\nimport org.openqa.selenium.edge.EdgeDriver;\r\nimport org.openqa.selenium.edge.EdgeOptions;\r\nimport org.openqa.selenium.firefox.FirefoxDriver;\r\nimport org.openqa.selenium.firefox.FirefoxOptions;\r\n\r\nimport java.util.Arrays;\r\n\r\nimport static utils.PropertiesManager.getPropertiesValue;\r\n\r\npublic class BrowserFactory {\r\n\r\n    public static WebDriver openBrowser()\r\n    {\r\n        WebDriver driver = null;\r\n        switch (getPropertiesValue(\"browserType\"))\r\n        {\r\n            case \"Chrome\" :\r\n                driver= new ChromeDriver(BrowserFactory.getChromeOptions());\r\n                break;\r\n\r\n            case \"Firefox\" :\r\n                driver= new FirefoxDriver(BrowserFactory.getFireFoxOptions());\r\n                break;\r\n\r\n            case \"Edge\" :\r\n                driver= new EdgeDriver(BrowserFactory.getEdgeOptions());\r\n\r\n                break;\r\n            default:\r\n                System.out.println(\"Wrong driver name\");\r\n        }\r\n        return driver;\r\n    }\r\n\r\n    public static ChromeOptions getChromeOptions()\r\n    {\r\n        ChromeOptions option = new ChromeOptions();\r\n        option.addArguments(\"--disable-infobars\");\r\n        option.setExperimentalOption(\"excludeSwitches\", Arrays.asList(\"enable-automation\"));\r\n\r\n        if (getPropertiesValue(\"windowMaximized\").equalsIgnoreCase(\"true\"))\r\n            option.addArguments(\"--start-maximized\");\r\n        if (getPropertiesValue(\"headless\").equalsIgnoreCase(\"true\"))\r\n            option.addArguments(\"--headless\");\r\n        return option;\r\n    }\r\n\r\n    public static EdgeOptions getEdgeOptions()\r\n    {\r\n        EdgeOptions option = new EdgeOptions();\r\n        option.addArguments(\"--disable-infobars\");\r\n        option.setExperimentalOption(\"excludeSwitches\", Arrays.asList(\"enable-automation\"));\r\n        option.addArguments(\"--guest\");\r\n\r\n        if (getPropertiesValue(\"windowMaximized\").equalsIgnoreCase(\"true\"))\r\n            option.addArguments(\"--start-maximized\");\r\n        if (getPropertiesValue(\"headless\").equalsIgnoreCase(\"true\"))\r\n            option.addArguments(\"--headless\");\r\n        return option;\r\n    }\r\n\r\n    public static FirefoxOptions getFireFoxOptions()\r\n    {\r\n        FirefoxOptions option = new FirefoxOptions();\r\n        if (getPropertiesValue(\"windowMaximized\").equalsIgnoreCase(\"false\"))\r\n            option.addArguments(\"--start-minimized\");\r\n        if (getPropertiesValue(\"headless\").equalsIgnoreCase(\"true\"))\r\n            option.addArguments(\"--headless\");\r\n        return option;\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/utils/BrowserFactory.java b/src/main/java/utils/BrowserFactory.java
--- a/src/main/java/utils/BrowserFactory.java	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
+++ b/src/main/java/utils/BrowserFactory.java	(date 1728783981739)
@@ -7,33 +7,127 @@
 import org.openqa.selenium.edge.EdgeOptions;
 import org.openqa.selenium.firefox.FirefoxDriver;
 import org.openqa.selenium.firefox.FirefoxOptions;
+import org.openqa.selenium.remote.LocalFileDetector;
+import org.openqa.selenium.remote.RemoteWebDriver;
 
+import java.net.MalformedURLException;
+import java.net.URL;
 import java.util.Arrays;
 
-import static utils.PropertiesManager.getPropertiesValue;
-
 public class BrowserFactory {
 
-    public static WebDriver openBrowser()
-    {
-        WebDriver driver = null;
-        switch (getPropertiesValue("browserType"))
-        {
-            case "Chrome" :
-                driver= new ChromeDriver(BrowserFactory.getChromeOptions());
-                break;
+    private static String browserType = System.getProperty("browserType");
+    private static String isHeadless = System.getProperty("isHeadless");
+    private static String isMaximized = System.getProperty("isMaximized");
+    private static String executionType = System.getProperty("executionType");
+    private static String remoteExecutionHost = System.getProperty("remoteExecutionHost");
+    private static String remoteExecutionPort = System.getProperty("remoteExecutionPort");
+
+    public static WebDriver openBrowser(String browserType) throws MalformedURLException {
+        RemoteWebDriver driver = null;
+
+        if (executionType.equalsIgnoreCase("Local"))
+        {
+            switch (browserType)
+            {
+                case "Chrome" :
+                    driver = new ChromeDriver(getChromeOptions());
+                    break;
 
-            case "Firefox" :
-                driver= new FirefoxDriver(BrowserFactory.getFireFoxOptions());
-                break;
+                case "Firefox" :
+                    driver = new FirefoxDriver(getFireFoxOptions());
+                    break;
 
-            case "Edge" :
-                driver= new EdgeDriver(BrowserFactory.getEdgeOptions());
-
-                break;
-            default:
-                System.out.println("Wrong driver name");
+                case "Edge" :
+                    driver = new EdgeDriver(getEdgeOptions());
+                    break;
+                default:
+                    System.out.println("Wrong driver name");
+            }
         }
+
+        else if (executionType.equalsIgnoreCase("Remote"))
+        {
+            switch (browserType)
+            {
+                case "Chrome" :
+                    driver = new RemoteWebDriver(
+                            new URL("http://" + remoteExecutionHost + ":" + remoteExecutionPort + "/wd/hub")
+                            ,getChromeOptions());
+                    driver.setFileDetector(new LocalFileDetector());
+                    break;
+
+                case "Firefox" :
+                    driver = new RemoteWebDriver(
+                            new URL("http://" + remoteExecutionHost + ":" + remoteExecutionPort + "/wd/hub")
+                            ,getFireFoxOptions());
+                    driver.setFileDetector(new LocalFileDetector());
+                    break;
+
+                case "Edge" :
+                    driver = new RemoteWebDriver(
+                            new URL("http://" + remoteExecutionHost + ":" + remoteExecutionPort + "/wd/hub")
+                            ,getEdgeOptions());
+                    driver.setFileDetector(new LocalFileDetector());
+                    break;
+                default:
+                    System.out.println("Wrong driver name");
+            }
+        }
+        return driver;
+    }
+
+    public static WebDriver openBrowser() throws MalformedURLException {
+        RemoteWebDriver driver = null;
+
+        if (executionType.equalsIgnoreCase("Local"))
+        {
+            switch (browserType)
+            {
+                case "Chrome" :
+                    driver = new ChromeDriver(getChromeOptions());
+                    break;
+
+                case "Firefox" :
+                    driver = new FirefoxDriver(getFireFoxOptions());
+                    break;
+
+                case "Edge" :
+                    driver = new EdgeDriver(getEdgeOptions());
+                    break;
+                default:
+                    System.out.println("Wrong driver name");
+            }
+        }
+
+        else if (executionType.equalsIgnoreCase("Remote"))
+        {
+            switch (browserType)
+            {
+                case "Chrome" :
+                    driver = new RemoteWebDriver(
+                            new URL("http://" + remoteExecutionHost + ":" + remoteExecutionPort + "/wd/hub")
+                            ,getChromeOptions());
+                    driver.setFileDetector(new LocalFileDetector());
+                    break;
+
+                case "Firefox" :
+                    driver = new RemoteWebDriver(
+                            new URL("http://" + remoteExecutionHost + ":" + remoteExecutionPort + "/wd/hub")
+                            ,getFireFoxOptions());
+                    driver.setFileDetector(new LocalFileDetector());
+                    break;
+
+                case "Edge" :
+                    driver = new RemoteWebDriver(
+                            new URL("http://" + remoteExecutionHost + ":" + remoteExecutionPort + "/wd/hub")
+                            ,getEdgeOptions());
+                    driver.setFileDetector(new LocalFileDetector());
+                    break;
+                default:
+                    System.out.println("Wrong driver name");
+            }
+        }
         return driver;
     }
 
@@ -42,11 +136,11 @@
         ChromeOptions option = new ChromeOptions();
         option.addArguments("--disable-infobars");
         option.setExperimentalOption("excludeSwitches", Arrays.asList("enable-automation"));
-
-        if (getPropertiesValue("windowMaximized").equalsIgnoreCase("true"))
+        if (isMaximized.equalsIgnoreCase("true"))
             option.addArguments("--start-maximized");
-        if (getPropertiesValue("headless").equalsIgnoreCase("true"))
+        if (isHeadless.equalsIgnoreCase("true"))
             option.addArguments("--headless");
+
         return option;
     }
 
@@ -55,26 +149,21 @@
         EdgeOptions option = new EdgeOptions();
         option.addArguments("--disable-infobars");
         option.setExperimentalOption("excludeSwitches", Arrays.asList("enable-automation"));
-        option.addArguments("--guest");
-
-        if (getPropertiesValue("windowMaximized").equalsIgnoreCase("true"))
+        if (isMaximized.equalsIgnoreCase("true"))
             option.addArguments("--start-maximized");
-        if (getPropertiesValue("headless").equalsIgnoreCase("true"))
+        if (isHeadless.equalsIgnoreCase("true"))
             option.addArguments("--headless");
+
         return option;
     }
 
     public static FirefoxOptions getFireFoxOptions()
     {
         FirefoxOptions option = new FirefoxOptions();
-        if (getPropertiesValue("windowMaximized").equalsIgnoreCase("false"))
+        if (isMaximized.equalsIgnoreCase("true"))
             option.addArguments("--start-minimized");
-        if (getPropertiesValue("headless").equalsIgnoreCase("true"))
+        if (isHeadless.equalsIgnoreCase("true"))
             option.addArguments("--headless");
         return option;
     }
-
-
-
-
 }
Index: src/main/java/utils/Waits.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package utils;\r\n\r\nimport org.openqa.selenium.ElementNotInteractableException;\r\nimport org.openqa.selenium.NotFoundException;\r\nimport org.openqa.selenium.StaleElementReferenceException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.support.ui.FluentWait;\r\nimport org.openqa.selenium.support.ui.Wait;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\n\r\nimport java.time.Duration;\r\n\r\nimport static utils.PropertiesManager.getPropertiesValue;\r\n\r\npublic class Waits {\r\n\r\n    public static void getImplicitWait(WebDriver driver) {\r\n        driver.manage().timeouts().implicitlyWait(\r\n                Duration.ofSeconds(Integer.parseInt(getPropertiesValue(\"implicitWaitTimeout\"))\r\n                ));\r\n    }\r\n\r\n    public static Wait<WebDriver> getExplicitWait(WebDriver driver) {\r\n        return new WebDriverWait(driver,\r\n                Duration.ofSeconds(Integer.parseInt(getPropertiesValue(\"ExplicitWaitTimeout\"))\r\n        ));\r\n    }\r\n\r\n    public static Wait<WebDriver> getFluentWait(WebDriver driver) {\r\n        return new FluentWait<>(driver)\r\n                .withTimeout(Duration.ofSeconds(\r\n                        Integer.parseInt(getPropertiesValue(\"FluentWaitTimeout\")\r\n                )))\r\n                .pollingEvery(Duration.ofMillis(\r\n                        Integer.parseInt(getPropertiesValue(\"FluentWaitPolling\")\r\n                )))\r\n                .ignoring(NotFoundException.class)\r\n                .ignoring(ElementNotInteractableException.class)\r\n                .ignoring(AssertionError.class)\r\n                .ignoring(StaleElementReferenceException.class);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/utils/Waits.java b/src/main/java/utils/Waits.java
--- a/src/main/java/utils/Waits.java	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
+++ b/src/main/java/utils/Waits.java	(date 1728783981721)
@@ -1,9 +1,6 @@
 package utils;
 
-import org.openqa.selenium.ElementNotInteractableException;
-import org.openqa.selenium.NotFoundException;
-import org.openqa.selenium.StaleElementReferenceException;
-import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.*;
 import org.openqa.selenium.support.ui.FluentWait;
 import org.openqa.selenium.support.ui.Wait;
 import org.openqa.selenium.support.ui.WebDriverWait;
@@ -37,6 +34,7 @@
                 .ignoring(NotFoundException.class)
                 .ignoring(ElementNotInteractableException.class)
                 .ignoring(AssertionError.class)
-                .ignoring(StaleElementReferenceException.class);
+                .ignoring(StaleElementReferenceException.class)
+                .ignoring(JavascriptException.class);
     }
 }
Index: src/main/java/utils/CustomSoftAssert.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/utils/CustomSoftAssert.java b/src/main/java/utils/CustomSoftAssert.java
new file mode 100644
--- /dev/null	(date 1728783981742)
+++ b/src/main/java/utils/CustomSoftAssert.java	(date 1728783981742)
@@ -0,0 +1,28 @@
+package utils;
+
+import lombok.SneakyThrows;
+import org.openqa.selenium.WebDriver;
+import org.testng.asserts.IAssert;
+import org.testng.asserts.SoftAssert;
+
+public class CustomSoftAssert extends SoftAssert{
+
+    public static WebDriver softAssertDriver;
+    public static CustomSoftAssert softAssert = new CustomSoftAssert();
+
+    @SneakyThrows
+    @Override
+    public void onAssertFailure(IAssert<?> assertCommand, AssertionError ex) {
+        Screenshot.captureSoftFailure(softAssertDriver,assertCommand);
+    }
+
+    public static void reportSoftAssertionErrors()
+    {
+        try{
+            softAssert.assertAll("The Soft Assertion Errors are listed below: ");
+        }catch (AssertionError e)
+        {
+            System.out.println(e.getMessage());
+        }
+    }
+}
Index: src/main/java/utils/PropertiesManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package utils;\r\n\r\nimport java.io.FileInputStream;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.util.Properties;\r\n\r\npublic class PropertiesManager {\r\n    public static String filePath;\r\n\r\n    public static Properties loadPropertiesIntoSystem() throws IOException {\r\n        Properties properties = new Properties();\r\n        FileInputStream input = new FileInputStream(filePath);\r\n        properties.load(input);\r\n        System.getProperties().putAll(properties);\r\n        return properties;\r\n    }\r\n\r\n    public static String getPropertiesValue(String key){\r\n        return System.getProperty(key);\r\n    }\r\n\r\n    public static void AddPropertiesKey(String key, String value) throws IOException {\r\n        Properties properties = loadPropertiesIntoSystem();\r\n        FileOutputStream output = new FileOutputStream(filePath);\r\n        properties.setProperty(key,value);\r\n        properties.store(output,null);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/utils/PropertiesManager.java b/src/main/java/utils/PropertiesManager.java
--- a/src/main/java/utils/PropertiesManager.java	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
+++ b/src/main/java/utils/PropertiesManager.java	(date 1728643583544)
@@ -8,10 +8,11 @@
 public class PropertiesManager {
     public static String filePath;
 
-    public static Properties loadPropertiesIntoSystem() throws IOException {
+    public static Properties loadProperties() throws IOException {
         Properties properties = new Properties();
         FileInputStream input = new FileInputStream(filePath);
         properties.load(input);
+        properties.putAll(System.getProperties());
         System.getProperties().putAll(properties);
         return properties;
     }
@@ -21,7 +22,7 @@
     }
 
     public static void AddPropertiesKey(String key, String value) throws IOException {
-        Properties properties = loadPropertiesIntoSystem();
+        Properties properties = loadProperties();
         FileOutputStream output = new FileOutputStream(filePath);
         properties.setProperty(key,value);
         properties.store(output,null);
Index: src/main/java/utils/ImportStaticMethods
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import static utils.ActionBot.*;\r\nimport static utils.AlertsActions.*;\r\nimport static utils.ApiManager.*;\r\nimport static utils.BrowserFactory.*;\r\nimport static utils.CookiesManager.*;\r\nimport static utils.DeleteDirectoryFiles.*;\r\nimport static utils.DropdownActions.*;\r\nimport static utils.JDBC.*;\r\nimport static utils.JsonManager.*;\r\nimport static utils.PropertiesManager.*;\r\nimport static utils.RandomDataGenerator.*;\r\nimport static utils.Screenshot.*;\r\nimport static utils.ScrollActions.*;\r\nimport static utils.TestNGListners.*;\r\nimport static utils.ThreadDriver.*;\r\nimport static utils.Waits.*;\r\nimport static utils.WindowManager.*;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/utils/ImportStaticMethods b/src/main/java/utils/ImportStaticMethods
--- a/src/main/java/utils/ImportStaticMethods	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
+++ b/src/main/java/utils/ImportStaticMethods	(date 1726418800396)
@@ -1,17 +1,12 @@
-import static utils.ActionBot.*;
+import static utils.WebElementsActionBot.*;
 import static utils.AlertsActions.*;
-import static utils.ApiManager.*;
 import static utils.BrowserFactory.*;
 import static utils.CookiesManager.*;
-import static utils.DeleteDirectoryFiles.*;
 import static utils.DropdownActions.*;
-import static utils.JDBC.*;
-import static utils.JsonManager.*;
-import static utils.PropertiesManager.*;
-import static utils.RandomDataGenerator.*;
+import static utils.JDBCManager.*;
+import static utils.JsonFileWriter.*;
 import static utils.Screenshot.*;
 import static utils.ScrollActions.*;
-import static utils.TestNGListners.*;
-import static utils.ThreadDriver.*;
+import static utils.RandomDataGenerator.*;
 import static utils.Waits.*;
 import static utils.WindowManager.*;
\ No newline at end of file
Index: src/main/java/utils/RandomDataGenerator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package utils;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\n\r\npublic class RandomDataGenerator {\r\n\r\n    public static String generateName()\r\n    {\r\n      String currentTime = new SimpleDateFormat(\"HHmmssSSS\").format(new Date());\r\n      return \"test\" + currentTime;\r\n    }\r\n\r\n    public static String generateInteger()\r\n    {\r\n        return new SimpleDateFormat(\"HHmmssSSS\").format(new Date());\r\n    }\r\n\r\n    public static String generateEmail()\r\n    {\r\n        String currentTime = new SimpleDateFormat(\"HHmmssSSS\").format(new Date());\r\n        return \"test\" + currentTime + \"@gmail.com\";\r\n    }\r\n\r\n    public static String generateStrongPassword()\r\n    {\r\n        String currentTime = new SimpleDateFormat(\"yyyyMMdd\").format(new Date());\r\n        return \"test\" + \"@%^\" + currentTime;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/utils/RandomDataGenerator.java b/src/main/java/utils/RandomDataGenerator.java
--- a/src/main/java/utils/RandomDataGenerator.java	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
+++ b/src/main/java/utils/RandomDataGenerator.java	(date 1728783981745)
@@ -1,35 +1,71 @@
 package utils;
 
+import com.github.javafaker.Faker;
+
 import java.text.SimpleDateFormat;
 import java.util.Date;
+import java.util.List;
+import java.util.Random;
 
 public class RandomDataGenerator {
 
-    public static String generateName()
+    public static String generateUniqueName()
     {
-      String currentTime = new SimpleDateFormat("HHmmssSSS").format(new Date());
-      return "test" + currentTime;
+      String currentTime = new SimpleDateFormat("mmssSSS").format(new Date());
+      return "Test" + currentTime;
     }
 
-    public static String generateInteger()
+    public static String generateUniqueInteger()
     {
-        return new SimpleDateFormat("HHmmssSSS").format(new Date());
+        return new SimpleDateFormat("mmssSSS").format(new Date());
     }
 
-    public static String generateEmail()
+    public static String generateUniqueEmail()
     {
-        String currentTime = new SimpleDateFormat("HHmmssSSS").format(new Date());
-        return "test" + currentTime + "@gmail.com";
+        String currentTime = new SimpleDateFormat("mmssSSS").format(new Date());
+        return "Test" + currentTime + "@gmail.com";
     }
 
     public static String generateStrongPassword()
     {
-        String currentTime = new SimpleDateFormat("yyyyMMdd").format(new Date());
-        return "test" + "@%^" + currentTime;
+        String currentTime = new SimpleDateFormat("mmssSSS").format(new Date());
+        return "Test" + "@%^" + currentTime;
     }
 
+    public static String generateName()
+    {
+       return new Faker().name().firstName().replace("'", "''");
+    }
 
+    public static String generateCompany()
+    {
+        return new Faker().company().name().replace("'", "''");
+    }
 
+    public static String generateAddress()
+    {
+        return new Faker().address().fullAddress().replace("'", "''");
+    }
 
+    public static String generateCity()
+    {
+        return new Faker().address().city().replace("'", "''");
+    }
 
+    public static String generateZipCode()
+    {
+        return new Faker().address().zipCode();
+    }
+
+    public static String generateItemFromList(List<String> list)
+    {
+        int randomIndex = new Random().nextInt(list.size());
+        return list.get(randomIndex);
+    }
+
+    public static String generateNumericalString (int min,int max)
+    {
+        int randomNumber = new Random().nextInt(max-min)+min;
+        return String.valueOf(randomNumber);
+    }
 }
Index: src/main/java/utils/JsonManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package utils;\r\n\r\nimport com.fasterxml.jackson.core.JsonProcessingException;\r\nimport com.fasterxml.jackson.core.type.TypeReference;\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.GsonBuilder;\r\nimport org.apache.commons.io.FileUtils;\r\nimport org.json.simple.JSONArray;\r\nimport org.json.simple.JSONObject;\r\nimport org.json.simple.parser.JSONParser;\r\nimport org.json.simple.parser.ParseException;\r\n\r\nimport java.io.File;\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.util.Map;\r\n\r\npublic class JsonManager {\r\n\r\n    //Variables\r\n    private String filePath;\r\n\r\n    //Constructor\r\n    public JsonManager(String filePath) {\r\n        this.filePath = filePath;\r\n    }\r\n\r\n    //Method to get JsonFile and convert it to JsonObject\r\n    private JSONObject getJsonFile() throws IOException, ParseException {\r\n        //pass the path of test data json file\r\n        File filename = new File(filePath);\r\n        //convert the json file to string\r\n        String jsonString = FileUtils.readFileToString(filename, \"UTF8\");\r\n        //parse the json string into object (Deserialization)\r\n        Object obj = new JSONParser().parse(jsonString);\r\n        //return the object as Json Object\r\n        return (JSONObject) obj;\r\n    }\r\n\r\n    //Method to Get JsonData by Input\r\n    public String getTestData(String key) throws IOException, ParseException {\r\n        String[] arrofSTG = key.split(\"\\\\.\");\r\n        Object object = getJsonFile().get(arrofSTG[0]);\r\n        if (arrofSTG.length==2) {\r\n            object = ((JSONObject) object).get(arrofSTG[1]);\r\n        }\r\n        if (arrofSTG.length==3) {\r\n            object = ((JSONObject) object).get(arrofSTG[2]);\r\n        }\r\n        return (String) object;\r\n    }\r\n\r\n    //Method to Get JsonData by Input\r\n    public String getTestDataInsideArray(String key) throws IOException, ParseException {\r\n        String[] arrofSTG = key.split(\"\\\\.\");\r\n        String[] arrofSTG_2 = (arrofSTG[0]).split(\"\\\\[\");\r\n        String [] arrofSTG_3 = (arrofSTG_2[1]).split(\"]\");\r\n        int index = Integer.parseInt(arrofSTG_3[0]);\r\n\r\n        JSONArray array = (JSONArray) getJsonFile().get(arrofSTG_2[0]);\r\n        Object object = null;\r\n        if (arrofSTG.length==2) {\r\n            object = (array).get(index);\r\n            object = ((JSONObject) object).get(arrofSTG[1]);\r\n        }\r\n        if (arrofSTG.length==3) {\r\n            object = ((JSONObject) object).get(arrofSTG[2]);\r\n        }\r\n        return (String) object;\r\n    }\r\n\r\n    //Method to Set JsonData by Input\r\n    public void setTestData(String key, String value) throws IOException, ParseException {\r\n        String[] arrofSTG = key.split(\"\\\\.\");\r\n        Object object = getJsonFile();\r\n        Object object2;\r\n        if (arrofSTG.length==1) {\r\n            ((JSONObject)object).put(arrofSTG[0],value);\r\n        }\r\n        else if (arrofSTG.length==2) {\r\n            object2 = ((JSONObject)object).get(arrofSTG[0]);\r\n            ((JSONObject) object2).put(arrofSTG[1], value);\r\n        }\r\n        else if (arrofSTG.length==3) {\r\n            object2 = ((JSONObject)object).get(arrofSTG[0]);\r\n            Object object3= ((JSONObject)object2).get(arrofSTG[1]);\r\n            ((JSONObject) object3).put(arrofSTG[2], value);\r\n        }\r\n\r\n        Gson gson = new GsonBuilder().setPrettyPrinting().create();\r\n        String formattedJson = gson.toJson(object);\r\n        createJsonFile(formattedJson,filePath);\r\n    }\r\n\r\n    public static void createJsonFile(Object object , String jsonFilePath) throws IOException {\r\n        FileWriter file = new FileWriter(jsonFilePath);\r\n        Gson gson = new GsonBuilder().setPrettyPrinting().create();\r\n        String formattedJson = gson.toJson(object);\r\n        file.write(formattedJson);\r\n        file.close();\r\n    }\r\n\r\n    public static org.json.JSONObject convertMaptoJsonObject(Map map)\r\n    {\r\n        org.json.JSONObject object = new org.json.JSONObject(map);\r\n        return  object;\r\n    }\r\n\r\n    public static  Map<String, Object> convertJsonStringToMap(String jsonString) throws JsonProcessingException {\r\n        ObjectMapper mapper = new ObjectMapper();\r\n        Map<String, Object> map\r\n                = mapper.readValue(jsonString, new TypeReference<Map<String,Object>>(){});\r\n    return map;\r\n    }\r\n\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/utils/JsonManager.java b/src/main/java/utils/JsonManager.java
--- a/src/main/java/utils/JsonManager.java	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
+++ b/src/main/java/utils/JsonManager.java	(date 1728783981729)
@@ -26,54 +26,82 @@
         this.filePath = filePath;
     }
 
-    //Method to get JsonFile and convert it to JsonObject
-    private JSONObject getJsonFile() throws IOException, ParseException {
-        //pass the path of test data json file
-        File filename = new File(filePath);
-        //convert the json file to string
-        String jsonString = FileUtils.readFileToString(filename, "UTF8");
-        //parse the json string into object (Deserialization)
-        Object obj = new JSONParser().parse(jsonString);
-        //return the object as Json Object
-        return (JSONObject) obj;
-    }
+    //Method to Get JsonData by jsonPath
+    public String getData(String jsonPath) throws IOException, ParseException {
+        String[] arrofSTG = jsonPath.split("\\.");
+        if (arrofSTG[0].contains("["))
+        {
+            String[] arrofSTG_2 = (arrofSTG[0]).split("\\[");
+            String [] arrofSTG_3 = (arrofSTG_2[1]).split("]");
+            int index = Integer.parseInt(arrofSTG_3[0]);
 
-    //Method to Get JsonData by Input
-    public String getTestData(String key) throws IOException, ParseException {
-        String[] arrofSTG = key.split("\\.");
-        Object object = getJsonFile().get(arrofSTG[0]);
-        if (arrofSTG.length==2) {
-            object = ((JSONObject) object).get(arrofSTG[1]);
-        }
-        if (arrofSTG.length==3) {
-            object = ((JSONObject) object).get(arrofSTG[2]);
+            JSONArray array = (JSONArray) readJsonFile().get(arrofSTG_2[0]);
+            Object object = null;
+            if (arrofSTG.length==2) {
+                object = (array).get(index);
+                object = ((JSONObject) object).get(arrofSTG[1]);
+            }
+            if (arrofSTG.length==3) {
+                object = ((JSONObject) object).get(arrofSTG[2]);
+            }
+            return object.toString();
         }
-        return (String) object;
-    }
+
+        else
+        {
+            Object object = readJsonFile().get(arrofSTG[0]);
+            if (arrofSTG.length==2) {
+
+                object = ((JSONObject) object).get(arrofSTG[1]);
+            }
+            else if (arrofSTG.length==3) {
 
-    //Method to Get JsonData by Input
-    public String getTestDataInsideArray(String key) throws IOException, ParseException {
-        String[] arrofSTG = key.split("\\.");
-        String[] arrofSTG_2 = (arrofSTG[0]).split("\\[");
-        String [] arrofSTG_3 = (arrofSTG_2[1]).split("]");
-        int index = Integer.parseInt(arrofSTG_3[0]);
+                object = ((JSONObject) object).get(arrofSTG[2]);
+            }
+            return object.toString();
+        }
+    }
+
+    //Method to Get JsonData by jsonPath
+    public Object getDataAsObject(String jsonPath) throws IOException, ParseException {
+        String[] arrofSTG = jsonPath.split("\\.");
+        if (arrofSTG[0].contains("["))
+        {
+            String[] arrofSTG_2 = (arrofSTG[0]).split("\\[");
+            String [] arrofSTG_3 = (arrofSTG_2[1]).split("]");
+            int index = Integer.parseInt(arrofSTG_3[0]);
 
-        JSONArray array = (JSONArray) getJsonFile().get(arrofSTG_2[0]);
-        Object object = null;
-        if (arrofSTG.length==2) {
-            object = (array).get(index);
-            object = ((JSONObject) object).get(arrofSTG[1]);
-        }
-        if (arrofSTG.length==3) {
-            object = ((JSONObject) object).get(arrofSTG[2]);
+            JSONArray array = (JSONArray) readJsonFile().get(arrofSTG_2[0]);
+            Object object = null;
+            if (arrofSTG.length==2) {
+                object = (array).get(index);
+                object = ((JSONObject) object).get(arrofSTG[1]);
+            }
+            if (arrofSTG.length==3) {
+                object = ((JSONObject) object).get(arrofSTG[2]);
+            }
+            return object;
         }
-        return (String) object;
+
+        else
+        {
+            Object object = readJsonFile().get(arrofSTG[0]);
+            if (arrofSTG.length==2) {
+
+                object = ((JSONObject) object).get(arrofSTG[1]);
+            }
+            else if (arrofSTG.length==3) {
+
+                object = ((JSONObject) object).get(arrofSTG[2]);
+            }
+            return object;
+        }
     }
 
     //Method to Set JsonData by Input
-    public void setTestData(String key, String value) throws IOException, ParseException {
+    public JsonManager setData(String key, String value) throws IOException, ParseException {
         String[] arrofSTG = key.split("\\.");
-        Object object = getJsonFile();
+        Object object = readJsonFile();
         Object object2;
         if (arrofSTG.length==1) {
             ((JSONObject)object).put(arrofSTG[0],value);
@@ -88,11 +116,23 @@
             ((JSONObject) object3).put(arrofSTG[2], value);
         }
 
-        Gson gson = new GsonBuilder().setPrettyPrinting().create();
-        String formattedJson = gson.toJson(object);
-        createJsonFile(formattedJson,filePath);
+        createJsonFile(object,filePath);
+        return this;
+    }
+
+    //Method to read JsonFile and convert it to JsonObject
+    public JSONObject readJsonFile() throws IOException, ParseException {
+        //pass the path of test data json file
+        File filename = new File(filePath);
+        //convert the json file to string
+        String jsonString = FileUtils.readFileToString(filename, "UTF8");
+        //parse the json string into object (Deserialization)
+        Object obj = new JSONParser().parse(jsonString);
+        //return the object as Json Object
+        return (JSONObject) obj;
     }
 
+    //Method to Create JsonFile from Object
     public static void createJsonFile(Object object , String jsonFilePath) throws IOException {
         FileWriter file = new FileWriter(jsonFilePath);
         Gson gson = new GsonBuilder().setPrettyPrinting().create();
@@ -101,12 +141,27 @@
         file.close();
     }
 
+    //Method to Combine multiple JsonObjects then write them to JsonFile as a Combined Object
+    public static void setJsonFileFromMultipleJsonObjects(JSONObject[] arr,String jsonFilePath) throws IOException {
+        JSONObject total = new JSONObject();
+        for (int i = 0;i<arr.length;i++)
+        {
+            total.putAll(arr[i]);
+        }
+
+        System.out.println(total.toJSONString());
+        //Write the Pretty Format of Parent JSON Array into the JSON File
+        createJsonFile(total,jsonFilePath);
+    }
+
+    //Method to Convert Map to Json Object
     public static org.json.JSONObject convertMaptoJsonObject(Map map)
     {
         org.json.JSONObject object = new org.json.JSONObject(map);
         return  object;
     }
 
+    //Method to Convert Json String to Map
     public static  Map<String, Object> convertJsonStringToMap(String jsonString) throws JsonProcessingException {
         ObjectMapper mapper = new ObjectMapper();
         Map<String, Object> map
Index: src/test/java/testcases/Register.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package testcases;\r\n\r\nimport com.fasterxml.jackson.core.JsonProcessingException;\r\nimport objectModels.RegisterRequestModel;\r\nimport org.testng.annotations.Listeners;\r\nimport org.testng.annotations.Test;\r\n\r\n@Listeners(utils.TestNGListners.class)\r\npublic class Register {\r\n\r\n    @Test\r\n    public void registerNewUserByStaticDataFromMockServer() throws JsonProcessingException {\r\n\r\n        new RegisterRequestModel()\r\n                .prepareRegistrationRequestFromMockServer(4)\r\n                .registerNewUser()\r\n                .validateStatusFromResponse()\r\n                .validateMassageFromResponse()\r\n                .validateSuccessFromResponse()\r\n                .validateNameFromResponse()\r\n                .validateEmailFromResponse();\r\n    }\r\n\r\n    @Test\r\n    public void registerNewUserByDynamicDataFromTimeStamp() throws JsonProcessingException {\r\n\r\n       new RegisterRequestModel()\r\n                .prepareRegistrationRequestWithRandomValues()\r\n                .registerNewUser()\r\n                .validateStatusFromResponse()\r\n                .validateMassageFromResponse()\r\n                .validateSuccessFromResponse()\r\n                .validateNameFromResponse()\r\n                .validateEmailFromResponse();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/testcases/Register.java b/src/test/java/testcases/Register.java
--- a/src/test/java/testcases/Register.java	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
+++ b/src/test/java/testcases/Register.java	(date 1729126207289)
@@ -12,8 +12,8 @@
     public void registerNewUserByStaticDataFromMockServer() throws JsonProcessingException {
 
         new RegisterRequestModel()
-                .prepareRegistrationRequestFromMockServer(4)
-                .registerNewUser()
+                .prepareRegisterRequestFromMockServer(4)
+                .sendRegisterRequest()
                 .validateStatusFromResponse()
                 .validateMassageFromResponse()
                 .validateSuccessFromResponse()
@@ -25,8 +25,8 @@
     public void registerNewUserByDynamicDataFromTimeStamp() throws JsonProcessingException {
 
        new RegisterRequestModel()
-                .prepareRegistrationRequestWithRandomValues()
-                .registerNewUser()
+                .prepareRegisterRequestWithRandomValues()
+                .sendRegisterRequest()
                 .validateStatusFromResponse()
                 .validateMassageFromResponse()
                 .validateSuccessFromResponse()
Index: src/main/java/utils/JDBC.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/utils/JDBC.java b/src/main/java/utils/JDBCManager.java
rename from src/main/java/utils/JDBC.java
rename to src/main/java/utils/JDBCManager.java
--- a/src/main/java/utils/JDBC.java	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
+++ b/src/main/java/utils/JDBCManager.java	(date 1728783981713)
@@ -3,6 +3,7 @@
 import com.mysql.cj.jdbc.Driver;
 import org.json.simple.JSONArray;
 import org.json.simple.JSONObject;
+import org.json.simple.parser.ParseException;
 
 import java.io.IOException;
 import java.sql.Connection;
@@ -13,11 +14,10 @@
 import static utils.JsonManager.createJsonFile;
 import static utils.PropertiesManager.getPropertiesValue;
 
-public class JDBC {
-
-    //Table of One Rows and No Nested Key
-    public static JSONObject setJsonObjectFromDBForSimpleJsonObjects(String query,
-                                                             String[] jsonKeys) throws SQLException, IOException {
+public class JDBCManager {
+    //Table of Multiple Rows and one Nested Key
+    public static JSONObject setJsonObjectFromDBForNestedArrayOfJsonObjects(String query ,
+                                                                     String[] jsonKeys, String jsonMainKey) throws SQLException, IOException {
         //Register Driver Classs for the Database
         DriverManager.registerDriver(new Driver());
         //Create Connection with the Database
@@ -26,7 +26,9 @@
         ResultSet rs = connection.createStatement().executeQuery(query);
 
         //Create JSON Objects and JSON Array that represent the Json File Format
-        JSONObject record = null;
+        JSONArray array = new JSONArray();
+        JSONObject record;
+        JSONObject mainKey = new JSONObject();
         //Outer Looping on each record/row on Database table
         while((rs.next())) {
             //Inner Looping on each column in a specific row of Database table
@@ -38,14 +40,17 @@
                         rs.getString(rs.getMetaData().getColumnName(i+1)));
             }
             //Fill the  Json Array of each object hat represent a certain row on Table
+            array.add(record);
         }
-        return record ;
-    }
+        //assign the Json Array as value of the Main key
+        mainKey.put(jsonMainKey,array);
 
+        return mainKey;
+    }
 
-    //Table of One Rows and one Nested Key
+    //Table of Multiple Rows and Multiple Nested Keys
     public static JSONObject setJsonObjectFromDBForNestedJsonObjects(String query ,
-                                                             String[] jsonKeys, String jsonMainKey) throws SQLException, IOException {
+                                                             String[] jsonKeys,String[] jsonMainKeys) throws SQLException, IOException {
         //Register Driver Classs for the Database
         DriverManager.registerDriver(new Driver());
         //Create Connection with the Database
@@ -53,9 +58,10 @@
                 ,getPropertiesValue("dbUser"),getPropertiesValue("dbPassword"));        //Execute the Select Query on the Database and retrieve the query results in Result Set
         ResultSet rs = connection.createStatement().executeQuery(query);
 
-        //Create JSON Objects that represent the Json File Format
-        JSONObject record = null;
-        JSONObject mainKey = new JSONObject();
+        //Create Parent & Child JSON Objects that represent the Json File Format
+        JSONObject mainRecord = new JSONObject();
+        JSONObject record;
+
         //Outer Looping on each record/row on Database table
         while((rs.next())) {
             //Inner Looping on each column in a specific row of Database table
@@ -66,17 +72,59 @@
                 record.put(jsonKeys[i],
                         rs.getString(rs.getMetaData().getColumnName(i+1)));
             }
+            //Fill the Parent Json Object with main keys and the corresponding child object of each key
+            mainRecord.put(jsonMainKeys[ rs.getRow()-1 ], record);
         }
-        //assign the Json Array as value of the Main key
-        mainKey.put(jsonMainKey,record);
-
-        return mainKey;
+        return mainRecord;
     }
 
+    //**********************************************************************************************************************//
 
     //Table of Multiple Rows and one Nested Key
-    public static JSONObject setJsonObjectFromDBForNestedArrayOfJsonObjects(String query ,
-                                                                     String[] jsonKeys, String jsonMainKey) throws SQLException, IOException {
+    public static void setJsonFileFromDBForNestedArrayOfJsonObjects(String query,String jsonFilePath,String[] jsonKeys,
+                                                                      String jsonMainKey) throws SQLException, IOException, ParseException {
+        //Read the object1 for data retrieved from Database
+        JSONObject object1 = setJsonObjectFromDBForNestedArrayOfJsonObjects(query,jsonKeys,jsonMainKey);
+
+        //Read the Current Json File content and convert it to Object 2
+        JSONObject object2 = new JsonManager(jsonFilePath).readJsonFile();
+
+        //Combine the two Json objects into one Object then Write it to the JSON File
+        object2.putAll(object1);
+        createJsonFile(object2,jsonFilePath);
+    }
+
+    //Table of Multiple Rows and Multiple Nested Keys
+    public static void setJsonFileFromDBForNestedJsonObjects(String query, String jsonFilePath,
+                                                                         String[] jsonKeys,String[] jsonMainKeys) throws SQLException, IOException, ParseException {
+        //Read the object1 for data retrieved from Database
+        JSONObject object1 = setJsonObjectFromDBForNestedJsonObjects(query,jsonKeys,jsonMainKeys);
+
+        //Read the Current Json File content and convert it to Object 2
+        JSONObject object2 = new JsonManager(jsonFilePath).readJsonFile();
+
+        //Combine the two Json objects into one Object then Write it to the JSON File
+        object2.putAll(object1);
+        createJsonFile(object2,jsonFilePath);
+    }
+
+    //**********************************************************************************************************************//
+
+    //Insert New Record to Database
+    public static void insertNewRecordToDatabase(String query) throws IOException, SQLException {
+        //Register Driver Classs for the Database
+        DriverManager.registerDriver(new Driver());
+        //Create Connection with the Database
+        Connection connection = DriverManager.getConnection(getPropertiesValue("dbUrl")
+                ,getPropertiesValue("dbUser"),getPropertiesValue("dbPassword"));
+        connection.createStatement().executeUpdate(query);
+    }
+
+    //**********************************************************************************************************************//
+
+    /*//Table of One Rows and No Nested Key
+    private static JSONObject setJsonObjectFromDBForSimpleJsonObjects(String query,
+                                                                      String[] jsonKeys) throws SQLException, IOException {
         //Register Driver Classs for the Database
         DriverManager.registerDriver(new Driver());
         //Create Connection with the Database
@@ -85,9 +133,7 @@
         ResultSet rs = connection.createStatement().executeQuery(query);
 
         //Create JSON Objects and JSON Array that represent the Json File Format
-        JSONArray array = new JSONArray();
-        JSONObject record;
-        JSONObject mainKey = new JSONObject();
+        JSONObject record = null;
         //Outer Looping on each record/row on Database table
         while((rs.next())) {
             //Inner Looping on each column in a specific row of Database table
@@ -99,18 +145,13 @@
                         rs.getString(rs.getMetaData().getColumnName(i+1)));
             }
             //Fill the  Json Array of each object hat represent a certain row on Table
-            array.add(record);
         }
-        //assign the Json Array as value of the Main key
-        mainKey.put(jsonMainKey,array);
-
-        return mainKey;
+        return record ;
     }
 
-
-    //Table of Multiple Rows and Multiple Nested Keys
-    public static JSONObject setJsonObjectFromDBForNestedJsonObjects(String query ,
-                                                             String[] jsonKeys,String[] jsonMainKeys) throws SQLException, IOException {
+    //Table of One Rows and one Nested Key
+    private static JSONObject setJsonObjectFromDBForNestedJsonObjects(String query ,
+                                                                      String[] jsonKeys, String jsonMainKey) throws SQLException, IOException {
         //Register Driver Classs for the Database
         DriverManager.registerDriver(new Driver());
         //Create Connection with the Database
@@ -118,10 +159,9 @@
                 ,getPropertiesValue("dbUser"),getPropertiesValue("dbPassword"));        //Execute the Select Query on the Database and retrieve the query results in Result Set
         ResultSet rs = connection.createStatement().executeQuery(query);
 
-        //Create Parent & Child JSON Objects that represent the Json File Format
-        JSONObject mainRecord = new JSONObject();
-        JSONObject record;
-
+        //Create JSON Objects that represent the Json File Format
+        JSONObject record = null;
+        JSONObject mainKey = new JSONObject();
         //Outer Looping on each record/row on Database table
         while((rs.next())) {
             //Inner Looping on each column in a specific row of Database table
@@ -132,16 +172,15 @@
                 record.put(jsonKeys[i],
                         rs.getString(rs.getMetaData().getColumnName(i+1)));
             }
-            //Fill the Parent Json Object with main keys and the corresponding child object of each key
-            mainRecord.put(jsonMainKeys[ rs.getRow()-1 ], record);
         }
-        return mainRecord;
-    }
+        //assign the Json Array as value of the Main key
+        mainKey.put(jsonMainKey,record);
 
-    //**********************************************************************************************************************//
+        return mainKey;
+    }
     //Table of One Rows and No Nested Key
-    public static void setJsonFileFromDBForSimpleJsonObjects(String query, String jsonFilePath,
-                                                                     String[] jsonKeys) throws SQLException, IOException {
+    private static void setJsonFileFromDBForSimpleJsonObjects(String query, String jsonFilePath,
+                                                              String[] jsonKeys) throws SQLException, IOException {
         JSONObject object = setJsonObjectFromDBForSimpleJsonObjects(query,jsonKeys);
         //Write the Pretty Format of Parent JSON Array into the JSON File
         createJsonFile(object,jsonFilePath);
@@ -149,46 +188,10 @@
 
 
     //Table of One Rows and one Nested Key
-    public static void setJsonFileFromDBForNestedJsonObjects(String query, String jsonFilePath, String[] jsonKeys,
-                                                             String jsonMainKey) throws SQLException, IOException {
+    private static void setJsonFileFromDBForNestedJsonObjects(String query, String jsonFilePath, String[] jsonKeys,
+                                                              String jsonMainKey) throws SQLException, IOException, ParseException {
         JSONObject object = setJsonObjectFromDBForNestedJsonObjects(query,jsonKeys,jsonMainKey);
-        //Write the Pretty Format of Parent JSON Array into the JSON File
-        createJsonFile(object,jsonFilePath);
-    }
-
-
-    //Table of Multiple Rows and one Nested Key
-    public static void setJsonFileFromDBForNestedArrayOfJsonObjects(String query,String jsonFilePath,String[] jsonKeys,
-                                                                      String jsonMainKey) throws SQLException, IOException {
-        JSONObject object = setJsonObjectFromDBForNestedArrayOfJsonObjects(query,jsonKeys,jsonMainKey);
-        //Convert the Format of Parent JSON Array to a pretty format
-        //Write the Pretty Format of Parent JSON Array into the JSON File
-        createJsonFile(object,jsonFilePath);
-    }
-
-
-    //Table of Multiple Rows and Multiple Nested Keys
-    public static void setJsonFileFromDBForNestedJsonObjects(String query, String jsonFilePath,
-                                                                         String[] jsonKeys,String[] jsonMainKeys) throws SQLException, IOException {
-        JSONObject object = setJsonObjectFromDBForNestedJsonObjects(query,jsonKeys,jsonMainKeys);
-        //Write the Pretty Format of Parent JSON Array into the JSON File
-        createJsonFile(object,jsonFilePath);
-    }
-
-
-    public static void setJsonFileFromMultipleJsonObjects(JSONObject[] arr,String jsonFilePath) throws IOException {
-        JSONObject total = new JSONObject();
-        for (int i = 0;i<arr.length;i++)
-        {
-            total.putAll(arr[i]);
-        }
-
-        //Write the Pretty Format of Parent JSON Array into the JSON File
-        createJsonFile(total,jsonFilePath);
-
-
-    }
-
+    }*/
 }
 
 
Index: src/main/java/utils/ApiManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package utils;\r\n\r\nimport com.fasterxml.jackson.core.JsonProcessingException;\r\nimport com.fasterxml.jackson.databind.json.JsonMapper;\r\nimport io.restassured.RestAssured;\r\nimport io.restassured.http.Header;\r\nimport io.restassured.response.Response;\r\nimport io.restassured.specification.RequestSpecification;\r\nimport org.json.JSONObject;\r\nimport static utils.JsonManager.*;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\npublic class ApiManager {\r\n\r\n    public static Response MakeRequest(String requestType,String endpoint,Object requestBody,String contentType) throws JsonProcessingException {\r\n        RequestSpecification request = RestAssured.given();\r\n        Response response = null;\r\n\r\n        if(contentType != null)\r\n        {\r\n            if (contentType.equalsIgnoreCase(\"application/json\"))\r\n            {\r\n                request = request.contentType(contentType).body(requestBody);\r\n            }\r\n\r\n            else if (contentType.equalsIgnoreCase(\"application/x-www-form-urlencoded\"))\r\n            {\r\n                JsonMapper mapper = new JsonMapper();\r\n                String jsonString = mapper.writeValueAsString(requestBody);\r\n                Map map = convertJsonStringToMap(jsonString);\r\n                request = request.contentType(contentType + \"; charset=utf-8\").formParams(map);\r\n            }\r\n        }\r\n\r\n        switch (requestType)\r\n        {\r\n            case \"Post\":\r\n                response = request.when().post(endpoint);\r\n                break;\r\n            case \"Put\":\r\n                response = request.when().put(endpoint);\r\n                break;\r\n            case \"Patch\":\r\n                response = request.when().patch(endpoint);\r\n                break;\r\n            case \"Delete\":\r\n                response = request.when().delete(endpoint);\r\n                break;\r\n        }\r\n        return response;\r\n    }\r\n\r\n    public static Response MakeAuthRequest(String requestType,String endpoint,Object requestBody,String contentType,\r\n                                           String authType,String authUser,String authPass, String token) throws JsonProcessingException {\r\n        RequestSpecification request = RestAssured.given();\r\n        Response response = null;\r\n\r\n        if(contentType != null)\r\n        {\r\n            if (contentType.equalsIgnoreCase(\"application/json\"))\r\n            {\r\n                request = request.contentType(contentType).body(requestBody);\r\n            }\r\n\r\n            else if (contentType.equalsIgnoreCase(\"application/x-www-form-urlencoded\"))\r\n            {\r\n                JsonMapper mapper = new JsonMapper();\r\n                String jsonString = mapper.writeValueAsString(requestBody);\r\n                Map map = convertJsonStringToMap(jsonString);\r\n                request = request.contentType(contentType + \"; charset=utf-8\").formParams(map);\r\n            }\r\n        }\r\n\r\n        if(authType.equalsIgnoreCase(\"BasicAuth\"))\r\n        {\r\n            request = request.auth().basic(authUser,authPass);\r\n        }\r\n\r\n        else if(authType.equalsIgnoreCase(\"BearerToken\"))\r\n        {\r\n            request = request.header(\"Authorization\",\"Bearer \"+token);\r\n        }\r\n\r\n        else if(authType.equalsIgnoreCase(\"CookieAuth\"))\r\n        {\r\n            request = request.header(\"Cookie\",\"token=\"+token);\r\n        }\r\n\r\n        else if(authType.equalsIgnoreCase(\"X-Auth-Token\"))\r\n        {\r\n            request = request.header(\"x-auth-token\",token);\r\n        }\r\n\r\n        switch (requestType)\r\n        {\r\n            case \"Post\":\r\n                response = request.when().post(endpoint);\r\n                break;\r\n            case \"Put\":\r\n                response = request.when().put(endpoint);\r\n                break;\r\n\r\n            case \"Patch\":\r\n                response = request.when().patch(endpoint);\r\n                break;\r\n\r\n            case \"Delete\":\r\n                response = request.when().delete(endpoint);\r\n                break;\r\n        }\r\n        return response;\r\n    }\r\n\r\n    public static Response GetRequest(String endpoint,Map queryParameters)\r\n    {\r\n        RequestSpecification request = RestAssured.given();\r\n        Response response = null;\r\n\r\n        if (queryParameters != null)\r\n        {request = request.queryParams(queryParameters);}\r\n\r\n        response = request.when().get(endpoint);\r\n        return response;\r\n    }\r\n\r\n    public static Response GetAuthRequest(String endpoint,Map queryParameters,\r\n                                          String authType,String authUser,String authPass, String token)\r\n    {\r\n        RequestSpecification request = RestAssured.given();\r\n        Response response = null;\r\n\r\n        if (queryParameters != null)\r\n        {request = request.queryParams(queryParameters);}\r\n\r\n        if(authType.equalsIgnoreCase(\"BasicAuth\"))\r\n        {\r\n            request = request.auth().basic(authUser,authPass);\r\n        }\r\n\r\n        else if(authType.equalsIgnoreCase(\"BearerToken\"))\r\n        {\r\n            request = request.header(\"Authorization\",\"Bearer \"+token);\r\n        }\r\n\r\n        else if(authType.equalsIgnoreCase(\"CookieAuth\"))\r\n        {\r\n            request = request.header(\"Cookie\",\"token=\"+token);\r\n        }\r\n        else if(authType.equalsIgnoreCase(\"X-Auth-Token\"))\r\n        {\r\n            request = request.header(\"x-auth-token\",token);\r\n        }\r\n\r\n        response = request.when().get(endpoint);\r\n        return response;\r\n    }\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////////////\r\n    public static int getJsonIntValueFromResponse(Response response, String jsonPath)\r\n    {\r\n        return response.jsonPath().getInt(jsonPath);\r\n    }\r\n\r\n    public static String getJsonStringValuefromResponse(Response response, String jsonPath)\r\n    {\r\n        return response.jsonPath().getString(jsonPath);\r\n    }\r\n\r\n    public static JSONObject getJsonObjectfromResponse(Response response, String jsonPath)\r\n    {\r\n        Map map = response.jsonPath().getJsonObject(jsonPath);\r\n        JSONObject object = new JSONObject(map);\r\n        return object;\r\n    }\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////////////\r\n    public static void logResponseBody(Response response)\r\n    {\r\n        response.then().log().body();\r\n        System.out.println(\"*********************************************\");\r\n    }\r\n\r\n    public static String getResponseBody(Response response)\r\n    {\r\n       return response.getBody().asPrettyString();\r\n    }\r\n\r\n    public static List<Header> getResponseHeaders(Response response)\r\n    {\r\n        return response.getHeaders().asList();\r\n    }\r\n\r\n    public static String getResponseHeaderByName(Response response, String headerName)\r\n    {\r\n        return response.getHeader(headerName);\r\n    }\r\n\r\n    public static Map getResponseCookies(Response response)\r\n    {\r\n        return response.getCookies();\r\n    }\r\n\r\n    public static long getResponseTime(Response response, TimeUnit timeUnit)\r\n    {\r\n        return response.getTimeIn(timeUnit);\r\n    }\r\n\r\n    public static void verifyResponseCode(Response response, int code)\r\n    {\r\n        response.then().statusCode(code);\r\n    }\r\n\r\n    public static void verifyResponseContentType(Response response,String contentType)\r\n    {\r\n        response.then().contentType(contentType);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/utils/ApiManager.java b/src/main/java/utils/ApiManager.java
--- a/src/main/java/utils/ApiManager.java	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
+++ b/src/main/java/utils/ApiManager.java	(date 1728783981718)
@@ -1,13 +1,15 @@
 package utils;
 
 import com.fasterxml.jackson.core.JsonProcessingException;
-import com.fasterxml.jackson.databind.json.JsonMapper;
+import com.google.gson.Gson;
+import com.google.gson.reflect.TypeToken;
 import io.restassured.RestAssured;
 import io.restassured.http.Header;
+import io.restassured.parsing.Parser;
 import io.restassured.response.Response;
 import io.restassured.specification.RequestSpecification;
 import org.json.JSONObject;
-import static utils.JsonManager.*;
+
 import java.util.List;
 import java.util.Map;
 import java.util.concurrent.TimeUnit;
@@ -15,6 +17,7 @@
 public class ApiManager {
 
     public static Response MakeRequest(String requestType,String endpoint,Object requestBody,String contentType) throws JsonProcessingException {
+        RestAssured.registerParser("text/html", Parser.JSON);
         RequestSpecification request = RestAssured.given();
         Response response = null;
 
@@ -27,9 +30,11 @@
 
             else if (contentType.equalsIgnoreCase("application/x-www-form-urlencoded"))
             {
-                JsonMapper mapper = new JsonMapper();
-                String jsonString = mapper.writeValueAsString(requestBody);
-                Map map = convertJsonStringToMap(jsonString);
+                //convert requestObject to Map
+                Gson gson = new Gson();
+                String json = gson.toJson(requestBody);
+                Map<String, Object> map = gson.fromJson(json, new TypeToken<Map<String, Object>>() {}.getType());
+
                 request = request.contentType(contentType + "; charset=utf-8").formParams(map);
             }
         }
@@ -54,6 +59,7 @@
 
     public static Response MakeAuthRequest(String requestType,String endpoint,Object requestBody,String contentType,
                                            String authType,String authUser,String authPass, String token) throws JsonProcessingException {
+        RestAssured.registerParser("text/html", Parser.JSON);
         RequestSpecification request = RestAssured.given();
         Response response = null;
 
@@ -66,9 +72,10 @@
 
             else if (contentType.equalsIgnoreCase("application/x-www-form-urlencoded"))
             {
-                JsonMapper mapper = new JsonMapper();
-                String jsonString = mapper.writeValueAsString(requestBody);
-                Map map = convertJsonStringToMap(jsonString);
+                //convert requestObject to Map
+                Gson gson = new Gson();
+                String json = gson.toJson(requestBody);
+                Map<String, Object> map = gson.fromJson(json, new TypeToken<Map<String, Object>>() {}.getType());
                 request = request.contentType(contentType + "; charset=utf-8").formParams(map);
             }
         }
Index: src/main/java/utils/DeleteDirectoryFiles.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package utils;\r\n\r\nimport java.io.File;\r\n\r\npublic class DeleteDirectoryFiles {\r\n\r\n    public static void deleteFiles(File dirPath) {\r\n        File filesList[] = dirPath.listFiles();\r\n        for(File file : filesList) {\r\n            if(file.isFile()) {\r\n                file.delete();\r\n            } else {\r\n                deleteFiles(file);\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/utils/DeleteDirectoryFiles.java b/src/main/java/utils/DeleteDirectoryFiles.java
--- a/src/main/java/utils/DeleteDirectoryFiles.java	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
+++ b/src/main/java/utils/DeleteDirectoryFiles.java	(date 1728767641009)
@@ -6,11 +6,15 @@
 
     public static void deleteFiles(File dirPath) {
         File filesList[] = dirPath.listFiles();
-        for(File file : filesList) {
-            if(file.isFile()) {
-                file.delete();
-            } else {
-                deleteFiles(file);
+        if (filesList != null) {
+            for(File file : filesList) {
+                if (!file.getName().equals("file.gitkeep")) {
+                    if (file.isFile()) {
+                        file.delete();
+                    } else {
+                        deleteFiles(file);
+                    }
+                }
             }
         }
     }
Index: src/main/java/utils/SessionManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/utils/SessionManager.java b/src/main/java/utils/SessionManager.java
new file mode 100644
--- /dev/null	(date 1728783981734)
+++ b/src/main/java/utils/SessionManager.java	(date 1728783981734)
@@ -0,0 +1,81 @@
+package utils;
+
+import org.json.simple.JSONArray;
+import org.json.simple.JSONObject;
+import org.json.simple.parser.ParseException;
+import org.openqa.selenium.Cookie;
+import org.openqa.selenium.WebDriver;
+
+import java.io.IOException;
+import java.util.Date;
+
+import static utils.CookiesManager.addCookie;
+import static utils.CookiesManager.deleteAllCookies;
+import static utils.JsonManager.createJsonFile;
+import static utils.WindowManager.refreshWindow;
+
+public class SessionManager {
+    private WebDriver driver;
+    private String jsonFilePath;
+    JsonManager json;
+
+    public SessionManager(WebDriver driver, String jsonFilePath){
+        this.driver= driver;
+        this.jsonFilePath = jsonFilePath;
+        json = new JsonManager(jsonFilePath);
+    }
+
+    // Get Cookies
+    private JSONArray getCookiesData(){
+        JSONArray cookies =new JSONArray();
+        driver.manage().getCookies().stream()
+                .forEach(
+                        x -> {
+                            JSONObject json = new JSONObject();
+                            json.put("name", x.getName());
+                            json.put("value", x.getValue());
+                            json.put("path", x.getPath());
+                            json.put("domain", x.getDomain());
+                            json.put("expiry", x.getExpiry());
+                            json.put("isSecure", x.isSecure());
+                            json.put("isHttpOnly", x.isHttpOnly());
+                            cookies.add(json);
+                        });
+        return cookies;
+    }
+
+    // Store Cookies Data in Json File If login success for each time
+    public void storeSessionCookies(String userName) throws IOException {
+
+        JSONObject sessionObj = new JSONObject();
+        sessionObj.put("username", userName);
+        //sessionObj.put("createdAt", LocalDateTime.now());
+        sessionObj.put("cookies_data", getCookiesData());
+        createJsonFile(sessionObj,jsonFilePath);
+    }
+
+    //Apply the Stored Cookies Data on Json File to the Current Session
+    public void applyCookiesToCurrentSession() throws IOException, ParseException {
+        //Delete All Cookies
+        deleteAllCookies(driver);
+
+        //Apply the Saved Cookies in the JsonFile to Current Session
+        JSONArray cookiesArray = (JSONArray) json.getDataAsObject("cookies_data");
+        for (int i = 0; i < cookiesArray.size(); i++){
+            JSONObject cookies = (JSONObject) cookiesArray.get(i);
+            Cookie ck =
+                    new Cookie.Builder(cookies.get("name").toString(), cookies.get("value").toString())
+                            .path(cookies.get("path").toString())
+                            .domain(cookies.get("domain").toString())
+                            .expiresOn(
+                                    !cookies.containsKey("expiry") ? null : new Date(new Date().getTime() + 3600 * 1000))
+                            .isSecure((Boolean) cookies.get("isSecure"))
+                            .isHttpOnly((Boolean) cookies.get("isHttpOnly"))
+                            .build();
+            addCookie(driver,ck);
+        }
+
+        //Refresh the Browser Page to check the Updates
+        refreshWindow(driver);
+    }
+}
Index: src/main/java/utils/WebElementsActionBot.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/utils/WebElementsActionBot.java b/src/main/java/utils/WebElementsActionBot.java
new file mode 100644
--- /dev/null	(date 1728765725132)
+++ b/src/main/java/utils/WebElementsActionBot.java	(date 1728765725132)
@@ -0,0 +1,274 @@
+package utils;
+
+import org.openqa.selenium.*;
+import org.openqa.selenium.interactions.Actions;
+import org.openqa.selenium.interactions.WheelInput;
+import org.openqa.selenium.support.ui.ExpectedConditions;
+import org.openqa.selenium.support.ui.Select;
+
+import java.io.IOException;
+import java.time.Duration;
+import java.util.List;
+import java.util.stream.Collectors;
+
+public class WebElementsActionBot {
+    //Variables
+    WebDriver driver;
+    String textBoxesPath = "src/test/resources/Screenshots/TextBoxes/";
+    String pressedButtonsPath ="src/test/resources/Screenshots/PressedButtons/";
+    String retrievedTextPath ="src/test/resources/Screenshots/RetrievedTexts/";
+
+    //Constructor
+    public WebElementsActionBot(WebDriver driver) {
+        this.driver = driver;
+    }
+
+    //************************    Basic Interactions    ************************//
+        //ActionBot1 for Typing on TextBox & Printing Text & Take Screenshot for TextBox
+    public WebElementsActionBot type (By locator , String text) throws IOException {
+        Waits.getFluentWait(driver).until(f -> {
+            driver.findElement(locator).clear();
+            driver.findElement(locator).sendKeys(text);
+            return true;
+        });
+
+       // System.out.println("Typing " + text);
+       // takeElementScreenshot(driver,locator,textBoxesPath,generateUniqueInteger());
+        return this;
+    }
+
+        //ActionBot2 for Pressing on Button or Link & Printing Button Name & Take Screenshot for Button
+    public WebElementsActionBot press(By locator) throws IOException {
+
+        try {
+            Waits.getFluentWait(driver).until(f -> {
+                //System.out.println("Clicking On " + driver.findElement(locator).getText());
+            /*try {
+                takeElementScreenshot(driver,locator,pressedButtonsPath,generateUniqueInteger());
+            } catch (IOException e) {
+                throw new RuntimeException(e);
+            }*/
+                driver.findElement(locator).click();
+                return true;
+            });
+        }catch (TimeoutException e)
+        //If Webdriver Click fails and fluent wait throw Timeout Exception, Try to click using JS
+        {
+            ((JavascriptExecutor)driver).executeScript("arguments[0].click();", driver.findElement(locator));
+        }
+
+        return this;
+    }
+
+    public WebElementsActionBot press(WebElement element) throws IOException {
+        try {
+            Waits.getFluentWait(driver).until(f -> {
+                element.click();
+                return true;
+            });
+        }catch (TimeoutException e)
+        //If Webdriver Click fails and fluent wait throw Timeout Exception, Try to click using JS
+        {
+            ((JavascriptExecutor)driver).executeScript("arguments[0].click();", element);
+        }
+        return this;
+    }
+
+        //ActionBot3 for Long Pressing on Button or Link & Printing Button Name & Take Screenshot for Button
+    public WebElementsActionBot longPress(By locator) throws IOException {
+        Waits.getFluentWait(driver).until(f -> {
+            System.out.println("LongClicking On " + driver.findElement(locator).getText());
+            /*try {
+                takeElementScreenshot(driver,locator,pressedButtonsPath,generateUniqueInteger());
+            } catch (IOException e) {
+                throw new RuntimeException(e);
+            }*/
+            new Actions(driver).moveToElement(driver.findElement(locator)).clickAndHold();
+            return true;
+        });
+        return this;
+    }
+
+        //ActionBot4 for Get Text from Element & Take Screenshot for Retrieved Text
+    public String readText(By locator) throws IOException {
+        Waits.getFluentWait(driver).until(f -> {
+          driver.findElement(locator).getText();
+            return true;
+        });
+        //takeElementScreenshot(driver,locator,retrievedTextPath,generateUniqueInteger());
+        return driver.findElement(locator).getText().replace("\n","");
+    }
+
+        //ActionBot5  for Verify Element is Displayed
+    public boolean isElementDisplayed(By locator){
+        try{
+            Waits.getFluentWait(driver).until(f -> {
+                driver.findElement(locator).isDisplayed();
+                return true;
+            });
+        }catch(TimeoutException e){
+            return false;
+        }
+        return true;
+    }
+
+        //ActionBot6 for Verify Element is Enabled
+    public boolean isElementEnabled(By locator){
+        try{
+            Waits.getFluentWait(driver).until(f -> {
+                driver.findElement(locator).isEnabled();
+                return true;
+            });
+        }catch(TimeoutException e){
+            return false;
+        }
+        return true;
+    }
+
+        //ActionBot7 for Get Page Title
+    public String getPageTitle(){
+            Waits.getFluentWait(driver).until(f -> {
+                driver.getTitle();
+                return true;
+            });
+        return driver.getTitle();
+    }
+
+        //ActionBot8 for Hover on Element
+    public WebElementsActionBot hoverOnElement(By locator) {
+        Waits.getFluentWait(driver).until(f -> {
+            new Actions(driver)
+                    .moveToElement(driver.findElement(locator))
+                    .pause(Duration.ofMillis(500))
+                    .perform();
+            return true;
+        });
+        return this;
+    }
+
+        //ActionBot9 for Drag and Drop
+    public WebElementsActionBot dragAndDrop(By sourceLocator, By destinationLocator){
+
+        Waits.getFluentWait(driver).until(f -> {
+            new Actions(driver).dragAndDrop(
+                    driver.findElement(sourceLocator),
+                    driver.findElement(destinationLocator)
+            ).build().perform();
+            return true;
+        });
+        return this;
+    }
+
+    //ActionBot10 for Get All Matched Elements
+    public List<WebElement> getAllMatchedElements(By locator){
+
+        Waits.getFluentWait(driver).until(f -> {
+            driver.findElements(locator);
+            return true;
+        });
+        return driver.findElements(locator);
+    }
+
+    //************************    Interactions with DropDowns    ************************//
+
+    public WebElementsActionBot selectFromDropdownByValue(By dropdown , String value)
+    {
+        dropDownElement(dropdown).selectByValue(value);
+        return this;
+    }
+
+    public WebElementsActionBot selectFromDropdownByIndex(By dropdown , int index)
+    {
+        dropDownElement(dropdown).selectByIndex(index);
+        return this;
+    }
+
+    public WebElementsActionBot selectFromDropdownByText(By dropdown , String text)
+    {
+        dropDownElement(dropdown).selectByVisibleText(text);
+        return this;
+    }
+
+    public List<String> getAllOptionsAsString(By dropdown)
+    {
+        List<WebElement> options = dropDownElement(dropdown).getOptions();
+        return options.stream().map(e->e.getText()).collect(Collectors.toList());
+    }
+
+    public String getSelectedOption(By dropdown)
+    {
+        return dropDownElement(dropdown).getFirstSelectedOption().getText();
+    }
+
+    public WebElementsActionBot deselectAllOptions(By dropdown)
+    {
+        dropDownElement(dropdown).deselectAll();
+        return this;
+    }
+
+    private Select dropDownElement(By dropdownLocator)
+    {
+        Waits.getFluentWait(driver).until(ExpectedConditions.elementToBeClickable(dropdownLocator));
+        return new Select(driver.findElement(dropdownLocator));
+    }
+
+    //************************    Interactions with Scrolling    ************************//
+
+    public WebElementsActionBot scrollToElementIntoView(By elementLocator) {
+        WebElement table = driver.findElement(elementLocator);
+        new Actions(driver).scrollToElement(table).perform();
+        return this;
+    }
+
+    public WebElementsActionBot scrollByGivenAmountFromElement(By elementLocator , int deltaX, int deltaY)
+    {
+        WheelInput.ScrollOrigin myOrigin =
+                WheelInput.ScrollOrigin.fromElement(driver.findElement(elementLocator));
+        new Actions(driver).scrollFromOrigin(myOrigin,deltaX,deltaY).perform();
+        return this;
+    }
+
+    public WebElementsActionBot scrollDownTillElementDisplayed (By targetElement , int scrollStep) {
+        Waits.getFluentWait(driver).until(f->{
+            new Actions(driver).scrollByAmount(0,scrollStep).perform();
+            driver.findElement(targetElement).isDisplayed();
+            return true;
+        });
+        return this;
+    }
+
+    //************************    Interactions with Alerts    ************************//
+
+    public void acceptAlert()
+    {
+        Waits.getFluentWait(driver).until(ExpectedConditions.alertIsPresent());
+        driver.switchTo().alert().accept();
+    }
+
+    public  void dismissAlert()
+    {
+        Waits.getFluentWait(driver).until(ExpectedConditions.alertIsPresent());
+        driver.switchTo().alert().dismiss();
+    }
+
+    public void typeTextInAlert(String text)
+    {
+        Waits.getFluentWait(driver).until(ExpectedConditions.alertIsPresent());
+        driver.switchTo().alert().sendKeys(text);
+    }
+
+    public void typeTextInAlert(String text1,String text2)
+    {
+        Waits.getFluentWait(driver).until(ExpectedConditions.alertIsPresent());
+        Actions action = new Actions(driver);
+        driver.switchTo().alert().sendKeys(text1);
+        action.keyDown(Keys.TAB).keyUp(Keys.TAB).perform();
+        driver.switchTo().alert().sendKeys(text2);
+    }
+
+    public String getTextInAlert()
+    {
+        Waits.getFluentWait(driver).until(ExpectedConditions.alertIsPresent());
+        return driver.switchTo().alert().getText();
+    }
+}
Index: src/test/java/testcases/Login.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package testcases;\r\n\r\nimport com.fasterxml.jackson.core.JsonProcessingException;\r\nimport objectModels.RegisterRequestModel;\r\nimport org.testng.annotations.Listeners;\r\nimport org.testng.annotations.Test;\r\n\r\n@Listeners(utils.TestNGListners.class)\r\npublic class Login {\r\n\r\n    String AuthToken;\r\n\r\n    @Test\r\n    public void loginWithExistingUser() throws JsonProcessingException {\r\n\r\n         new RegisterRequestModel()\r\n                .prepareRegistrationRequestWithRandomValues()\r\n                .registerNewUser()\r\n                .getNewUserCredentials()\r\n                .prepareLoginRequest()\r\n                .loginWithExistingUser()\r\n                .validateStatusFromResponse()\r\n                .validateMassageFromResponse()\r\n                 .validateTokenExists();\r\n    }\r\n\r\n    @Test\r\n    public void loginWithExistingUserWithFacadeDesign() throws JsonProcessingException {\r\n\r\n         new RegisterRequestModel()\r\n                .register()\r\n                .login();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/testcases/Login.java b/src/test/java/testcases/Login.java
--- a/src/test/java/testcases/Login.java	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
+++ b/src/test/java/testcases/Login.java	(date 1729126207298)
@@ -14,11 +14,11 @@
     public void loginWithExistingUser() throws JsonProcessingException {
 
          new RegisterRequestModel()
-                .prepareRegistrationRequestWithRandomValues()
-                .registerNewUser()
-                .getNewUserCredentials()
+                .prepareRegisterRequestWithRandomValues()
+                .sendRegisterRequest()
+                .getRegisteredUserCredentials()
                 .prepareLoginRequest()
-                .loginWithExistingUser()
+                .sendLoginRequest()
                 .validateStatusFromResponse()
                 .validateMassageFromResponse()
                  .validateTokenExists();
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"a270fe9f-c395-4917-8dd4-473b0ba92f34\" name=\"Changes\" comment=\"Test\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/025e2be9-1318-4b7b-b198-833070d137c6-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/05ce80fc-8d53-486f-84aa-8f0677826e7e-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/065346ac-b7c9-47fa-8fb0-f64fc381d9c5-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/07e1d60e-6fe9-4c7a-9307-410f36ed6d0c-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/12c4a628-308a-4386-95e1-c91bfef2b92c-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/14bf6749-7575-4e1c-a592-c89b0f92dae0-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/15a20389-43b3-40b8-8690-e2edb6d32e1b-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/163a9fc2-37e9-4cd7-b77d-c71bdc644bb5-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/16a1f96e-4353-4faa-a545-2f623b8d1bad-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/1b92056a-6f4b-4376-a415-715277bebe7f-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/228ef01a-e37d-494b-ba5a-4a2e91b15312-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/22b01589-e004-4f19-9296-3f3f00767020-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/230452a3-1be1-4c5a-8e6b-f32520519cc1-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/232bd5b0-2118-4da1-a471-433fc6fe8aae-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/25e72947-f2ad-4c7d-856b-6f610bfd55f8-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/25f58605-3a59-494b-a3d5-803858cecca0-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/274d5277-2c35-434c-a566-27d77ac1556e-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/2800ead9-d9fd-46d8-b9bd-1ced9802be76-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/28c2fcb9-bb5d-41ed-85fc-f2ffd13195dd-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/28ca4223-1f7f-4cf1-b2ed-3936b3dd99bb-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/2ab03ef0-0668-4ef8-b3e3-495e3aafb74a-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/2d98457d-b316-428a-b393-56d36d8e5491-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/303b6ac0-6964-4bfa-9873-8ab36e224cb8-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/33baceb1-aaff-4493-a0a2-3344aea9ecfc-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/34b706c1-788f-421c-9d8f-d49001f0a27b-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/35fc9d3e-9224-460f-94e2-766b092e0c4b-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/375146ed-5277-4cc7-8a6d-0f5a99abcb2c-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/381cad05-c810-4fc1-8431-2c6c659e207c-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/3871f748-7734-4299-8272-95f214265e57-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/3acf5b8a-07b5-4bc6-8394-00d5f917b177-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/3b61f719-74ec-44d6-b784-87ace62fa18c-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/3e992a6e-fa13-4a86-bbe2-06bfa461cad3-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/404642b9-fbaa-4c4a-9098-20514f997700-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/41bd8223-06d5-4b86-b424-f8b38f9250c0-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/43add97b-9697-4065-9c14-97d900128582-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/4791387c-dccd-4a06-b61a-db5b0e16ceb7-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/47f5b8b4-7198-4ec0-9b8e-197ac5aa2f94-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/4839dd22-9a02-457d-85fa-8ecd29d34116-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/490e9c4c-4388-4e2e-83bd-065b19e98f06-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/521c5ae7-0a1e-4ad3-8a5b-0f70557906aa-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/53dddf5b-48ac-420b-9cd8-b57fb7b81fa4-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/552b2ac1-959c-4c06-9dfb-0bb892b7851d-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/554fed7c-ce54-48ce-8e15-1ac3d0ad577a-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/56fb3eee-e9d1-4d82-8260-15e11f7aeafa-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/576042c5-2bbf-44ae-b3af-34cd99f356bb-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/5918f229-384b-429a-bc55-69ce54cca956-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/5f5aab7c-b4b2-4be9-bcb7-c21edb6d057e-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/60aac50e-df15-45b7-a2eb-149f91415936-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/64faf9e9-4997-4b05-95bd-8bb87d623d61-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/6551f233-4503-47de-9162-bdf5834793f2-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/6881cf91-3144-4d6f-a007-87bef651cefc-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/691fcc51-6cb4-4f5a-8fdf-5db212fc49e8-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/696893d1-9857-445f-8589-693e019e37a1-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/6c18b396-74b2-4187-a369-0f55ffab312f-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/6f485b88-f874-442f-a15b-6c18dcbf2889-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/6fa00644-7b2e-4156-bc30-5d27c9dda9a5-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/71a8bafd-5099-439a-a977-2a412bd5b45b-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/725b3699-a885-4f99-989e-1e1e90fcb859-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/729d1925-d05f-4a8e-bbde-9e5e36d01a6e-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/735c392f-eca6-4d56-bdbe-f5f577aab07b-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/77926e5e-c82d-41da-a4cb-eaf327b6a137-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/790c6632-2b86-44cd-a055-a2b44e51e7c2-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/7d3567eb-6b9d-4dc4-bc2e-20a14907abd4-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/7fd71e91-7faf-4a1a-8f58-2e7682805711-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/818492d5-349e-4fd8-add1-9354aaddd36c-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/870dd59e-2cd8-45f0-b9a0-eabc225d2863-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/87511139-38eb-49de-a8b8-bae0c5a366c7-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/8bb1a7d4-7434-454e-94f2-877bd52aec45-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/8dd0ab57-4103-4725-9760-03a87847e06a-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/901e907c-02ac-476c-9ce5-942e21da79c4-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/91e65c59-a9e3-4bd7-9baf-fbf158b12aba-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/947a4bb9-d7fb-4cb5-a5d0-fcdc59400a27-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/962905e2-0c11-4ce7-b1d9-0355c6aea1c4-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/965357bb-209b-47d2-b767-3c28dbaffd80-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/99d57d78-25fd-4a6c-af41-5b4df11ffad7-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/9d469d47-d758-4400-bc81-cd8600583a72-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/9dafcb7e-e4e8-44e5-8c6b-743e46e144f5-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/9f3debf0-917b-45a3-94a9-f1351845058d-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/a3469a84-4b69-4239-ae58-7bf4430a9f73-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/a6e366f8-141f-4c20-8dd6-669f54f4f2c0-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/a778004e-4a33-4ebd-991b-9f30f387f9cb-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/a806a908-a966-47c1-9092-8f6723768455-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/ab1df858-bf8d-4437-bcfc-97a945e0d0ad-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/af52eacc-e2a4-4af5-934d-3610218248b5-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/b000634c-e3fa-47aa-8db5-65ecff06e25e-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/b268dda1-7101-4ea6-81b0-9e0e2a541b3b-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/b298fd2e-7bb3-4692-8769-a417b8833664-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/b4a28048-8007-4299-8453-fe277ec4d5ad-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/b68c08af-ba40-4a5e-9ec1-2bbaddba003b-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/b7a3fed4-6e8d-4754-93cc-f9724a826c89-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/b9fc91f8-81cd-49e2-90d0-64303de47039-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/ba42ce4d-edf4-4a32-966f-133277f8a961-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/bb3e514a-177c-41c4-bb36-0f3f31f9a0f5-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/bb4a3ceb-1a4f-47f8-8c71-21767b70ba82-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/bc06be2c-c100-4fa9-8d6b-55225cc4beeb-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/bc3b0ea7-ed7d-4670-8af9-a388210f4069-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/c2afd2a6-241d-4f1f-a5f2-2345a264d70e-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/c35b4716-26eb-4d9e-b0c6-c1454c2d0d4b-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/c47e3939-5021-494c-88b8-6ee949b24bc6-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/c5223804-1df0-4c61-bbd1-9533066bb1ad-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/c5f4effb-e3f3-4218-aa6d-47b68c13c327-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/c723a908-1122-455a-8d49-e6f004251e2d-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/c82731ca-7e5c-4cc2-91ee-5ec96fef0579-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/c852e2a3-e5a1-4fc8-8440-33983dd711c9-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/ca8cc93b-d8ec-4a9a-b63c-253352bb6f2e-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/ce482378-693b-41a5-8f47-69210387db25-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/cef19060-21fd-4192-bee8-0b19923957e5-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/cf82f085-da31-4411-9e0b-f98fc621a0f3-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/d0066964-c96b-4181-a080-c2d7380e047b-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/d735d22b-aebc-4564-a8c2-59a67f83f645-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/d848c15a-d36e-4ce9-ba2a-e4c2550b2ae4-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/da32a379-980e-450e-8812-e5f8eb7701fc-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/dc58323d-a1c9-4237-81fd-cb46d16ff3c2-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/dcabf267-3854-400d-9847-fc1badedaf68-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/df01ca63-0778-4a01-8e5f-45d04a33a71f-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/e0836a09-0937-4941-9a9d-64ae46324860-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/e2bd2421-342e-41ab-88b8-c0a08109dc3f-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/e80d02b7-00de-4717-8b41-87983708adaf-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/e8749508-1be5-466c-80af-9780f2377c7a-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/e94f6d77-77cd-4acb-8056-e2a8c2cf0c54-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/e9c85e80-8278-47e7-8a55-4a5f1b4705b6-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/eb5a3b5a-b63e-4800-ab0b-3fb76f374ece-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/ebbfd6a6-ad15-4b1a-b1da-1ad8f0dfda4f-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/ebd337c0-df8d-4e36-bc20-cab5a321c47b-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/ef11bf5d-e88f-4e71-a167-60fed5839f93-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/f015ecb1-d04a-4589-a317-969bb5cc84e5-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/f0aa881f-955f-4f2a-9b4c-1ab7751e438b-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/f3b4cadc-d657-4749-9f6b-577587f51fba-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/f4ed0cd6-821d-4553-9aaa-b25e65854d23-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/f52f0710-34fe-45f3-897a-f93ec245a520-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/f5b9ffbe-b68c-4215-a5f5-ef298562dded-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/f7de1179-d40d-4550-b07d-a7eff7901c29-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/f935bae5-add3-4d92-bd68-e62205dfdcd1-result.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/fad9efb9-baf0-4ee2-8574-09769d7fd7ed-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/fc12cadc-2b33-4312-a4fd-9f8c6c97e6cb-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/allure-results/ff91b33d-731e-4db5-8651-a56805c1ebb7-container.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/objectModels/RegisterRequestModel.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/objectModels/RegisterRequestModel.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/objectModels/RegisterResponseModel.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/objectModels/RegisterResponseModel.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/pojoClasses/RegisterRequestPojo.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/pojoClasses/RegisterRequestPojo.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/pojoClasses/RegisterResponsePojo.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/pojoClasses/RegisterResponsePojo.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/utils/ApiManager.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/utils/ApiManager.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/utils/RandomDataGenerator.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/utils/RandomDataGenerator.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/Configurations.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/Configurations.properties\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/lineartests/Test1.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/testcases/CreateNote.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/testcases/CreateNote.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/testcases/Login.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/testcases/Login.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/testcases/Register.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/testcases/Register.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_TAGS\">\r\n      <GitPushTagMode>\r\n        <option name=\"argument\" value=\"--tags\" />\r\n        <option name=\"title\" value=\"All\" />\r\n      </GitPushTagMode>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\"><![CDATA[{\r\n  \"lastFilter\": {\r\n    \"state\": \"OPEN\",\r\n    \"assignee\": \"YehiaMetwally95\"\r\n  }\r\n}]]></component>\r\n  <component name=\"GithubPullRequestsUISettings\"><![CDATA[{\r\n  \"selectedUrlAndAccountId\": {\r\n    \"url\": \"https://github.com/YehiaMetwally95/NotesApiWithRestassured\",\r\n    \"accountId\": \"8e0ad561-fc41-4f51-bc0c-601cdc47f971\"\r\n  }\r\n}]]></component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"jar://$MAVEN_REPOSITORY$/org/testng/testng/7.10.2/testng-7.10.2-sources.jar!/org/testng/internal/invokers/MethodRunner.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"jar://$MAVEN_REPOSITORY$/org/testng/testng/7.10.2/testng-7.10.2-sources.jar!/org/testng/internal/invokers/TestInvoker.java\" root0=\"SKIP_INSPECTION\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2lRdts2SgZtVAP5gx3d0QJLTlz0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"TestNG.CreateNote.createNewNode.executor\": \"Run\",\r\n    \"TestNG.CreateNote.createNewNodeWithFacadeDesign.executor\": \"Run\",\r\n    \"TestNG.Login.loginWithExistingUser.executor\": \"Run\",\r\n    \"TestNG.Login.loginWithExistingUserWithFacadeDesign.executor\": \"Run\",\r\n    \"TestNG.Register.registerNewUser.executor\": \"Run\",\r\n    \"TestNG.Register.registerNewUserByDynamicDataFromTimeStamp.executor\": \"Run\",\r\n    \"TestNG.Register.registerNewUserByStaticDataFromMockServer.executor\": \"Run\",\r\n    \"TestNG.Register.test.executor\": \"Run\",\r\n    \"TestNG.Test1.PostwithRequestBodyfromJsonObjectAsContentTypeIsJson.executor\": \"Run\",\r\n    \"TestNG.Test1.PostwithRequestBodyfromPojoAsContentTypeIsFormData.executor\": \"Run\",\r\n    \"TestNG.Test1.PostwithRequestBodyfromPojoAsContentTypeIsJson.executor\": \"Run\",\r\n    \"TestNG.Test1.testmethod1.executor\": \"Run\",\r\n    \"TestNG.Test1.testmethod2.executor\": \"Run\",\r\n    \"TestNG.UpdateNoteStatus.executor\": \"Run\",\r\n    \"TestNG.UpdateNoteStatus.updateNoteStatus.executor\": \"Run\",\r\n    \"TestNG.UpdateNoteStatus.updateNoteStatusWithFacadeDesign.executor\": \"Run\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/Yehia.Metwally/OneDrive/yehia/Desktop/AutomatestProject/facade-design-pattern\",\r\n    \"onboarding.tips.debug.path\": \"C:/Users/Yehia.Metwally/OneDrive/yehia/Desktop/AutomatestProject/NotesAPI/src/main/java/io/github/YehiaMetwally95/Main.java\",\r\n    \"project.structure.last.edited\": \"Problems\",\r\n    \"project.structure.proportion\": \"0.0\",\r\n    \"project.structure.side.proportion\": \"0.2\",\r\n    \"settings.editor.selected.configurable\": \"reference.projectsettings.compiler.annotationProcessors\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Yehia.Metwally\\OneDrive\\yehia\\Desktop\\AutomatestProject\\NotesAPI\\src\\main\\java\\utils\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"TestNG.UpdateNoteStatus\">\r\n    <configuration name=\"CreateNote.createNewNode\" type=\"TestNG\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"NotesAPI\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"testcases.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"testcases\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"testcases.CreateNote\" />\r\n      <option name=\"METHOD_NAME\" value=\"createNewNode\" />\r\n      <option name=\"TEST_OBJECT\" value=\"METHOD\" />\r\n      <properties />\r\n      <listeners />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CreateNote.createNewNodeWithFacadeDesign\" type=\"TestNG\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"NotesAPI\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"testcases.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"testcases\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"testcases.CreateNote\" />\r\n      <option name=\"METHOD_NAME\" value=\"createNewNodeWithFacadeDesign\" />\r\n      <option name=\"TEST_OBJECT\" value=\"METHOD\" />\r\n      <properties />\r\n      <listeners />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UpdateNoteStatus\" type=\"TestNG\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"NotesAPI\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"testcases.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"testcases\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"testcases.UpdateNoteStatus\" />\r\n      <option name=\"TEST_OBJECT\" value=\"CLASS\" />\r\n      <properties />\r\n      <listeners />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UpdateNoteStatus.updateNoteStatus\" type=\"TestNG\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"NotesAPI\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"testcases.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"testcases\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"testcases.UpdateNoteStatus\" />\r\n      <option name=\"METHOD_NAME\" value=\"updateNoteStatus\" />\r\n      <option name=\"TEST_OBJECT\" value=\"METHOD\" />\r\n      <properties />\r\n      <listeners />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UpdateNoteStatus.updateNoteStatusWithFacadeDesign\" type=\"TestNG\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"NotesAPI\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"testcases.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"testcases\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"testcases.UpdateNoteStatus\" />\r\n      <option name=\"METHOD_NAME\" value=\"updateNoteStatusWithFacadeDesign\" />\r\n      <option name=\"TEST_OBJECT\" value=\"METHOD\" />\r\n      <properties />\r\n      <listeners />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"TestNG.UpdateNoteStatus\" />\r\n        <item itemvalue=\"TestNG.CreateNote.createNewNode\" />\r\n        <item itemvalue=\"TestNG.UpdateNoteStatus.updateNoteStatus\" />\r\n        <item itemvalue=\"TestNG.UpdateNoteStatus.updateNoteStatusWithFacadeDesign\" />\r\n        <item itemvalue=\"TestNG.CreateNote.createNewNodeWithFacadeDesign\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"a270fe9f-c395-4917-8dd4-473b0ba92f34\" name=\"Changes\" comment=\"\" />\r\n      <created>1725147040759</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1725147040759</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Test\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725197518611</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725197518611</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Test\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Test\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/io/github/YehiaMetwally95/Main.java</url>\r\n          <line>13</line>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 4bd9c5a98aa9b385d315278f62cc6c80a6f14bbf)
+++ b/.idea/workspace.xml	(date 1729125464184)
@@ -5,154 +5,32 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="a270fe9f-c395-4917-8dd4-473b0ba92f34" name="Changes" comment="Test">
+      <change afterPath="$PROJECT_DIR$/src/main/java/utils/CustomSoftAssert.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/utils/SessionManager.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/utils/WebElementsActionBot.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/025e2be9-1318-4b7b-b198-833070d137c6-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/05ce80fc-8d53-486f-84aa-8f0677826e7e-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/065346ac-b7c9-47fa-8fb0-f64fc381d9c5-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/07e1d60e-6fe9-4c7a-9307-410f36ed6d0c-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/12c4a628-308a-4386-95e1-c91bfef2b92c-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/14bf6749-7575-4e1c-a592-c89b0f92dae0-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/15a20389-43b3-40b8-8690-e2edb6d32e1b-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/163a9fc2-37e9-4cd7-b77d-c71bdc644bb5-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/16a1f96e-4353-4faa-a545-2f623b8d1bad-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/1b92056a-6f4b-4376-a415-715277bebe7f-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/228ef01a-e37d-494b-ba5a-4a2e91b15312-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/22b01589-e004-4f19-9296-3f3f00767020-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/230452a3-1be1-4c5a-8e6b-f32520519cc1-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/232bd5b0-2118-4da1-a471-433fc6fe8aae-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/25e72947-f2ad-4c7d-856b-6f610bfd55f8-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/25f58605-3a59-494b-a3d5-803858cecca0-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/274d5277-2c35-434c-a566-27d77ac1556e-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/2800ead9-d9fd-46d8-b9bd-1ced9802be76-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/28c2fcb9-bb5d-41ed-85fc-f2ffd13195dd-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/28ca4223-1f7f-4cf1-b2ed-3936b3dd99bb-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/2ab03ef0-0668-4ef8-b3e3-495e3aafb74a-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/2d98457d-b316-428a-b393-56d36d8e5491-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/303b6ac0-6964-4bfa-9873-8ab36e224cb8-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/33baceb1-aaff-4493-a0a2-3344aea9ecfc-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/34b706c1-788f-421c-9d8f-d49001f0a27b-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/35fc9d3e-9224-460f-94e2-766b092e0c4b-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/375146ed-5277-4cc7-8a6d-0f5a99abcb2c-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/381cad05-c810-4fc1-8431-2c6c659e207c-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/3871f748-7734-4299-8272-95f214265e57-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/3acf5b8a-07b5-4bc6-8394-00d5f917b177-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/3b61f719-74ec-44d6-b784-87ace62fa18c-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/3e992a6e-fa13-4a86-bbe2-06bfa461cad3-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/404642b9-fbaa-4c4a-9098-20514f997700-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/41bd8223-06d5-4b86-b424-f8b38f9250c0-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/43add97b-9697-4065-9c14-97d900128582-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/4791387c-dccd-4a06-b61a-db5b0e16ceb7-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/47f5b8b4-7198-4ec0-9b8e-197ac5aa2f94-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/4839dd22-9a02-457d-85fa-8ecd29d34116-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/490e9c4c-4388-4e2e-83bd-065b19e98f06-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/521c5ae7-0a1e-4ad3-8a5b-0f70557906aa-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/53dddf5b-48ac-420b-9cd8-b57fb7b81fa4-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/552b2ac1-959c-4c06-9dfb-0bb892b7851d-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/554fed7c-ce54-48ce-8e15-1ac3d0ad577a-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/56fb3eee-e9d1-4d82-8260-15e11f7aeafa-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/576042c5-2bbf-44ae-b3af-34cd99f356bb-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/5918f229-384b-429a-bc55-69ce54cca956-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/5f5aab7c-b4b2-4be9-bcb7-c21edb6d057e-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/60aac50e-df15-45b7-a2eb-149f91415936-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/64faf9e9-4997-4b05-95bd-8bb87d623d61-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/6551f233-4503-47de-9162-bdf5834793f2-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/6881cf91-3144-4d6f-a007-87bef651cefc-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/691fcc51-6cb4-4f5a-8fdf-5db212fc49e8-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/696893d1-9857-445f-8589-693e019e37a1-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/6c18b396-74b2-4187-a369-0f55ffab312f-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/6f485b88-f874-442f-a15b-6c18dcbf2889-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/6fa00644-7b2e-4156-bc30-5d27c9dda9a5-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/71a8bafd-5099-439a-a977-2a412bd5b45b-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/725b3699-a885-4f99-989e-1e1e90fcb859-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/729d1925-d05f-4a8e-bbde-9e5e36d01a6e-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/735c392f-eca6-4d56-bdbe-f5f577aab07b-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/77926e5e-c82d-41da-a4cb-eaf327b6a137-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/790c6632-2b86-44cd-a055-a2b44e51e7c2-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/7d3567eb-6b9d-4dc4-bc2e-20a14907abd4-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/7fd71e91-7faf-4a1a-8f58-2e7682805711-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/818492d5-349e-4fd8-add1-9354aaddd36c-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/870dd59e-2cd8-45f0-b9a0-eabc225d2863-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/87511139-38eb-49de-a8b8-bae0c5a366c7-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/8bb1a7d4-7434-454e-94f2-877bd52aec45-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/8dd0ab57-4103-4725-9760-03a87847e06a-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/901e907c-02ac-476c-9ce5-942e21da79c4-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/91e65c59-a9e3-4bd7-9baf-fbf158b12aba-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/947a4bb9-d7fb-4cb5-a5d0-fcdc59400a27-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/962905e2-0c11-4ce7-b1d9-0355c6aea1c4-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/965357bb-209b-47d2-b767-3c28dbaffd80-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/99d57d78-25fd-4a6c-af41-5b4df11ffad7-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/9d469d47-d758-4400-bc81-cd8600583a72-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/9dafcb7e-e4e8-44e5-8c6b-743e46e144f5-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/9f3debf0-917b-45a3-94a9-f1351845058d-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/a3469a84-4b69-4239-ae58-7bf4430a9f73-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/a6e366f8-141f-4c20-8dd6-669f54f4f2c0-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/a778004e-4a33-4ebd-991b-9f30f387f9cb-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/a806a908-a966-47c1-9092-8f6723768455-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/ab1df858-bf8d-4437-bcfc-97a945e0d0ad-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/af52eacc-e2a4-4af5-934d-3610218248b5-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/b000634c-e3fa-47aa-8db5-65ecff06e25e-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/b268dda1-7101-4ea6-81b0-9e0e2a541b3b-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/b298fd2e-7bb3-4692-8769-a417b8833664-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/b4a28048-8007-4299-8453-fe277ec4d5ad-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/b68c08af-ba40-4a5e-9ec1-2bbaddba003b-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/b7a3fed4-6e8d-4754-93cc-f9724a826c89-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/b9fc91f8-81cd-49e2-90d0-64303de47039-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/ba42ce4d-edf4-4a32-966f-133277f8a961-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/bb3e514a-177c-41c4-bb36-0f3f31f9a0f5-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/bb4a3ceb-1a4f-47f8-8c71-21767b70ba82-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/bc06be2c-c100-4fa9-8d6b-55225cc4beeb-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/bc3b0ea7-ed7d-4670-8af9-a388210f4069-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/c2afd2a6-241d-4f1f-a5f2-2345a264d70e-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/c35b4716-26eb-4d9e-b0c6-c1454c2d0d4b-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/c47e3939-5021-494c-88b8-6ee949b24bc6-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/c5223804-1df0-4c61-bbd1-9533066bb1ad-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/c5f4effb-e3f3-4218-aa6d-47b68c13c327-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/c723a908-1122-455a-8d49-e6f004251e2d-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/c82731ca-7e5c-4cc2-91ee-5ec96fef0579-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/c852e2a3-e5a1-4fc8-8440-33983dd711c9-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/ca8cc93b-d8ec-4a9a-b63c-253352bb6f2e-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/ce482378-693b-41a5-8f47-69210387db25-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/cef19060-21fd-4192-bee8-0b19923957e5-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/cf82f085-da31-4411-9e0b-f98fc621a0f3-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/d0066964-c96b-4181-a080-c2d7380e047b-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/d735d22b-aebc-4564-a8c2-59a67f83f645-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/d848c15a-d36e-4ce9-ba2a-e4c2550b2ae4-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/da32a379-980e-450e-8812-e5f8eb7701fc-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/dc58323d-a1c9-4237-81fd-cb46d16ff3c2-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/dcabf267-3854-400d-9847-fc1badedaf68-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/df01ca63-0778-4a01-8e5f-45d04a33a71f-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/e0836a09-0937-4941-9a9d-64ae46324860-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/e2bd2421-342e-41ab-88b8-c0a08109dc3f-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/e80d02b7-00de-4717-8b41-87983708adaf-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/e8749508-1be5-466c-80af-9780f2377c7a-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/e94f6d77-77cd-4acb-8056-e2a8c2cf0c54-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/e9c85e80-8278-47e7-8a55-4a5f1b4705b6-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/eb5a3b5a-b63e-4800-ab0b-3fb76f374ece-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/ebbfd6a6-ad15-4b1a-b1da-1ad8f0dfda4f-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/ebd337c0-df8d-4e36-bc20-cab5a321c47b-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/ef11bf5d-e88f-4e71-a167-60fed5839f93-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/f015ecb1-d04a-4589-a317-969bb5cc84e5-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/f0aa881f-955f-4f2a-9b4c-1ab7751e438b-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/f3b4cadc-d657-4749-9f6b-577587f51fba-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/f4ed0cd6-821d-4553-9aaa-b25e65854d23-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/f52f0710-34fe-45f3-897a-f93ec245a520-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/f5b9ffbe-b68c-4215-a5f5-ef298562dded-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/f7de1179-d40d-4550-b07d-a7eff7901c29-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/f935bae5-add3-4d92-bd68-e62205dfdcd1-result.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/fad9efb9-baf0-4ee2-8574-09769d7fd7ed-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/fc12cadc-2b33-4312-a4fd-9f8c6c97e6cb-container.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/allure-results/ff91b33d-731e-4db5-8651-a56805c1ebb7-container.json" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/objectModels/LoginRequestModel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/objectModels/LoginRequestModel.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/objectModels/RegisterRequestModel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/objectModels/RegisterRequestModel.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/objectModels/RegisterResponseModel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/objectModels/RegisterResponseModel.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/pojoClasses/RegisterRequestPojo.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/pojoClasses/RegisterRequestPojo.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/pojoClasses/RegisterResponsePojo.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/pojoClasses/RegisterResponsePojo.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/utils/ActionBot.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/utils/AlertsActions.java" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/utils/ApiManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/utils/ApiManager.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/utils/BrowserFactory.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/utils/BrowserFactory.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/utils/DeleteDirectoryFiles.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/utils/DeleteDirectoryFiles.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/utils/DropdownActions.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/utils/ImportStaticMethods" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/utils/ImportStaticMethods" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/utils/JDBC.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/utils/JDBCManager.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/utils/JsonManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/utils/JsonManager.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/utils/PropertiesManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/utils/PropertiesManager.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/utils/RandomDataGenerator.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/utils/RandomDataGenerator.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/Configurations.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/Configurations.properties" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/java/lineartests/Test1.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/utils/Screenshot.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/utils/Screenshot.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/utils/ScrollActions.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/utils/TestNGListners.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/utils/Waits.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/utils/Waits.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/test/java/testcases/CreateNote.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/testcases/CreateNote.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/test/java/testcases/Login.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/testcases/Login.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/test/java/testcases/Register.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/testcases/Register.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/testcases/UpdateNoteStatus.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/testcases/UpdateNoteStatus.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -175,18 +53,18 @@
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
-  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
-  "lastFilter": {
-    "state": "OPEN",
-    "assignee": "YehiaMetwally95"
+  <component name="GitHubPullRequestSearchHistory">{
+  &quot;lastFilter&quot;: {
+    &quot;state&quot;: &quot;OPEN&quot;,
+    &quot;assignee&quot;: &quot;YehiaMetwally95&quot;
   }
-}]]></component>
-  <component name="GithubPullRequestsUISettings"><![CDATA[{
-  "selectedUrlAndAccountId": {
-    "url": "https://github.com/YehiaMetwally95/NotesApiWithRestassured",
-    "accountId": "8e0ad561-fc41-4f51-bc0c-601cdc47f971"
+}</component>
+  <component name="GithubPullRequestsUISettings">{
+  &quot;selectedUrlAndAccountId&quot;: {
+    &quot;url&quot;: &quot;https://github.com/YehiaMetwally95/NotesApiWithRestassured&quot;,
+    &quot;accountId&quot;: &quot;8e0ad561-fc41-4f51-bc0c-601cdc47f971&quot;
   }
-}]]></component>
+}</component>
   <component name="HighlightingSettingsPerFile">
     <setting file="jar://$MAVEN_REPOSITORY$/org/testng/testng/7.10.2/testng-7.10.2-sources.jar!/org/testng/internal/invokers/MethodRunner.java" root0="SKIP_INSPECTION" />
     <setting file="jar://$MAVEN_REPOSITORY$/org/testng/testng/7.10.2/testng-7.10.2-sources.jar!/org/testng/internal/invokers/TestInvoker.java" root0="SKIP_INSPECTION" />
@@ -222,9 +100,9 @@
     "TestNG.UpdateNoteStatus.updateNoteStatusWithFacadeDesign.executor": "Run",
     "git-widget-placeholder": "master",
     "kotlin-language-version-configured": "true",
-    "last_opened_file_path": "C:/Users/Yehia.Metwally/OneDrive/yehia/Desktop/AutomatestProject/facade-design-pattern",
+    "last_opened_file_path": "D:/AutomatestProject/NotesAPI",
     "onboarding.tips.debug.path": "C:/Users/Yehia.Metwally/OneDrive/yehia/Desktop/AutomatestProject/NotesAPI/src/main/java/io/github/YehiaMetwally95/Main.java",
-    "project.structure.last.edited": "Problems",
+    "project.structure.last.edited": "Modules",
     "project.structure.proportion": "0.0",
     "project.structure.side.proportion": "0.2",
     "settings.editor.selected.configurable": "reference.projectsettings.compiler.annotationProcessors"
@@ -232,6 +110,8 @@
 }]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
+      <recent name="D:\AutomatestProject\NotesAPI\src\main\java" />
+      <recent name="D:\AutomatestProject\NotesAPI\src\main\java\utils" />
       <recent name="C:\Users\Yehia.Metwally\OneDrive\yehia\Desktop\AutomatestProject\NotesAPI\src\main\java\utils" />
     </key>
   </component>
@@ -352,7 +232,15 @@
       <option name="project" value="LOCAL" />
       <updated>1725197518611</updated>
     </task>
-    <option name="localTasksCounter" value="2" />
+    <task id="LOCAL-00002" summary="Test">
+      <option name="closed" value="true" />
+      <created>1725251509410</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1725251509410</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="VcsManagerConfiguration">
